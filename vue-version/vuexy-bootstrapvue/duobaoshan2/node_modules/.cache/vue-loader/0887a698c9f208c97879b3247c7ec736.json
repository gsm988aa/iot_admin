{"remainingRequest":"C:\\Users\\Han\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\duobaoshan2\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Han\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\duobaoshan2\\src\\views\\ThreePage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Han\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\duobaoshan2\\src\\views\\ThreePage.vue","mtime":1692075308677},{"path":"C:\\Users\\Han\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\duobaoshan2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1691976503719},{"path":"C:\\Users\\Han\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\duobaoshan2\\node_modules\\babel-loader\\lib\\index.js","mtime":1691976504997},{"path":"C:\\Users\\Han\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\duobaoshan2\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1691976503719},{"path":"C:\\Users\\Han\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\duobaoshan2\\node_modules\\vue-loader\\lib\\index.js","mtime":1691976505354}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ThreePage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2SA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;;;AAIA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ThreePage.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"full-screen\" >\r\n    <div class=\"index-background\" >\r\n\r\n      <div class=\"content-background\" >\r\n\r\n      </div>\r\n\r\n      <div style=\"display: flex; flex-direction: column; align-items: center;color: #1e232f\":class=\"{'blue-background': isBlueBackground}\"> 新一代智能柜\r\n      </div>\r\n      <!--版本号-->\r\n      <b-card-text style=\"text-align: end;padding-top: 325px;font-size: 5px;\">XYD_V.1.0</b-card-text>\r\n    </div>\r\n    <dv-border-box-9 class=\"box-9\">\r\n\r\n      <div class=\"content\">\r\n\r\n        <div class=\"tabs-container\" >\r\n          <!--          <dv-border-box-8  >-->\r\n\r\n          <b-tabs pills card vertical class=\"custom-warning-tab\">\r\n            <dv-decoration-2 :reverse=\"true\" style=\"width:5px;height:278px;position: fixed\" />\r\n\r\n            <b-tab title=\"紧急分闸\" active  >\r\n\r\n              <b-row>\r\n                <b-col cols=\"12\">\r\n                  <sweet-alert-types />\r\n                </b-col>\r\n              </b-row>\r\n\r\n            </b-tab>\r\n\r\n\r\n            <b-tab title=\"开关状态示意图\">\r\n              <b-card style=\"width: 400px;height: 250px;display: flex; justify-content: center; align-items: center;\">\r\n\r\n                <b-row>\r\n                  <b-col cols=\"6\">\r\n                    <img style=\"max-width: 100%; max-height: 100%;\" src=\"@/assets/images/kaiguan/weichuneng.png\" alt=\"Card image\"  />\r\n                    <b-card-text class=\"chuneng1\">未储能前</b-card-text>\r\n\r\n                  </b-col>\r\n                  <b-col cols=\"6\">\r\n                    <img style=\"max-width: 100%; max-height: 100%;\" src=\"@/assets/images/kaiguan/kaiguanquankai.png\" alt=\"Card image\"  />\r\n                    <b-card-text class=\"chuneng2\">储能完毕</b-card-text>\r\n                  </b-col>\r\n                </b-row>\r\n\r\n              </b-card>\r\n            </b-tab>\r\n\r\n            <b-tab title=\"九点测温\" >\r\n              <!--              <b-card-text>Tab contents 3</b-card-text>-->\r\n              <div class=\"tab-content-container-nine\">\r\n\r\n                <b-row>\r\n                  <b-col cols=\"6\">\r\n                    <b-card >\r\n                      <b-form-checkbox v-model=\"checkedstatus\" @change=\"showKalmanChange\" >显示卡尔曼温度预测曲线,超温告警,邮件提醒</b-form-checkbox>\r\n                    </b-card>\r\n                  </b-col>\r\n\r\n                  <b-col cols=\"6\">\r\n                    <div>\r\n                      <label for=\"temperature\" style=\"font-size: 10px\">选择温度：</label>\r\n                      <b-form-select id=\"temperature\" v-model=\"selectedTemperature\" :options=\"temperature_options\" style=\"width: 100px\">\r\n                        <!--                <b-form-select-option value=\"30\">30°</b-form-select-option>-->\r\n                        <!--                <b-form-select-option value=\"100\">100°</b-form-select-option>-->\r\n                      </b-form-select>\r\n                      <p style=\"font-size: 10px\">当前会超温预警的温度是: {{ selectedTemperature }}°C</p>\r\n                    </div>\r\n                  </b-col>\r\n                </b-row>\r\n\r\n\r\n\r\n                <b-row>\r\n\r\n                  <b-col cols=\"6\">\r\n                    <b-card style=\"height: 230px;\">\r\n                      <div style=\"width: 100%; height: 100%; transform: scale(0.55); transform-origin: top left;\">\r\n                        <div ref=\"chart1\" style=\"width: 300px; height: 400px;\"></div>\r\n                      </div>\r\n                      <div ref=\"chart1-kalman\"></div>\r\n                    </b-card>\r\n                  </b-col>\r\n\r\n                  <b-col cols=\"6\">\r\n                    <b-card style=\"height: 230px;\">\r\n                      <div style=\"width: 100%; height: 100%; transform: scale(0.55); transform-origin: top left;\">\r\n                        <div ref=\"chart2\" style=\"width: 300px; height: 400px;\"></div>\r\n                      </div>\r\n                      <div ref=\"chart2-kalman\"></div>\r\n                    </b-card>\r\n                  </b-col>\r\n                </b-row>\r\n\r\n                <b-row>\r\n                  <b-col cols=\"6\">\r\n                    <b-card style=\"height: 230px;\">\r\n                      <div style=\"width: 100%; height: 100%; transform: scale(0.55); transform-origin: top left;\">\r\n                        <div ref=\"chart3\" style=\"width: 300px; height: 400px;\"></div>\r\n                      </div>\r\n                      <div ref=\"chart3-kalman\"></div>\r\n                    </b-card>\r\n                  </b-col>\r\n                  <b-col cols=\"6\">\r\n                    <b-card style=\"height: 230px;\">\r\n                      <div style=\"width: 100%; height: 100%; transform: scale(0.55); transform-origin: top left;\">\r\n                        <div ref=\"chart4\" style=\"width: 300px; height: 400px;\"></div>\r\n                      </div>\r\n                      <div ref=\"chart4-kalman\"></div>\r\n                    </b-card>\r\n                  </b-col>\r\n                </b-row>\r\n\r\n                <b-row>\r\n                  <b-col cols=\"6\">\r\n                    <b-card style=\"height: 230px;\">\r\n                      <div style=\"width: 100%; height: 100%; transform: scale(0.55); transform-origin: top left;\">\r\n                        <div ref=\"chart5\" style=\"width: 300px; height: 400px;\"></div>\r\n                      </div>\r\n                      <div ref=\"chart5-kalman\"></div>\r\n                    </b-card>\r\n                  </b-col>\r\n                  <b-col cols=\"6\">\r\n                    <b-card style=\"height: 230px;\">\r\n                      <div style=\"width: 100%; height: 100%; transform: scale(0.55); transform-origin: top left;\">\r\n                        <div ref=\"chart6\" style=\"width: 300px; height: 400px;\"></div>\r\n                      </div>\r\n                      <div ref=\"chart6-kalman\"></div>\r\n                    </b-card>\r\n                  </b-col>\r\n\r\n\r\n                </b-row>\r\n\r\n                <b-row>\r\n                  <b-col cols=\"6\">\r\n                    <b-card style=\"height: 230px;\">\r\n                      <div style=\"width: 100%; height: 100%; transform: scale(0.55); transform-origin: top left;\">\r\n                        <div ref=\"chart7\" style=\"width: 300px; height: 400px;\"></div>\r\n                      </div>\r\n                      <div ref=\"chart7-kalman\"></div>\r\n                    </b-card>\r\n                  </b-col>\r\n                  <b-col cols=\"6\">\r\n                    <b-card style=\"height: 230px;\">\r\n                      <div style=\"width: 100%; height: 100%; transform: scale(0.55); transform-origin: top left;\">\r\n                        <div ref=\"chart8\" style=\"width: 300px; height: 400px;\"></div>\r\n                      </div>\r\n                      <div ref=\"chart8-kalman\"></div>\r\n                    </b-card>\r\n                  </b-col>\r\n\r\n                </b-row>\r\n\r\n                <b-row>\r\n                  <b-col cols=\"6\">\r\n                    <b-card style=\"height: 230px;\">\r\n                      <div style=\"width: 100%; height: 100%; transform: scale(0.55); transform-origin: top left;\">\r\n                        <div ref=\"chart9\" style=\"width: 300px; height: 400px;\"></div>\r\n                      </div>\r\n                      <div ref=\"chart9-kalman\"></div>\r\n                    </b-card>\r\n                  </b-col>\r\n                </b-row>\r\n\r\n                <div>\r\n\r\n                  <!-- 弹窗告警  -->\r\n                  <b-modal ref=\"modalRef\" v-model=\"showModal\"  title=\"warning\" hide-footer>\r\n                    <h3 class=\"custom-title\">温度预测超过100°</h3>\r\n                    <h3 class=\"attention-title\">请注意处理！</h3>\r\n                    <b-button class=\"mt-3\" block variant=\"primary\" @click=\"closeModal\">关闭</b-button>\r\n                  </b-modal>\r\n                </div>\r\n              </div>\r\n\r\n            </b-tab>\r\n\r\n\r\n            <b-tab title=\"开关柜控制&摄像头\" >\r\n              <div class=\"tab-content-container-nine\">\r\n                <b-row class=\"match-height\">\r\n                  <b-col cols=\"12\">\r\n                    <modal-basic />\r\n                  </b-col>\r\n                  <b-col cols=\"12\">\r\n                    <modal-theme />\r\n                  </b-col>\r\n                </b-row>\r\n                <b-row>\r\n                  <!--摄像头card-->\r\n                  <b-card class=\"camera\" :class=\"{ active: isActive === 'camera' }\" @click=\"isActive = 'camera'\" style=\"max-width: 400px;margin-left: 30px\">\r\n\r\n                    <h3 style=\"font-family: '微软雅黑 Light';font-weight: bold; \">视频监控</h3>\r\n\r\n                    <!--摄像头1-->\r\n                    <b-button\r\n                        class=\"visible ? null : 'collapsed'\"\r\n                        aria-expanded=\"visible ? 'true' : 'false'\"\r\n                        aria-controls=\"collapse-4\"\r\n                        @click=\"visible = !visible\"\r\n                    >\r\n                      摄像头1开关\r\n                    </b-button>.\r\n\r\n                    <div style=\"display: flex; justify-content:center; align-items: center;\">\r\n                      <b-collapse id=\"collapse-4\" v-model=\"visible\" class=\"mt-2\">\r\n                        <iframe src=\"http://localhost:8085\" width=\"640\" height=\"480\" style=\"transform: scale(0.5);\"></iframe>\r\n                      </b-collapse>\r\n                    </div>\r\n                    <br>\r\n                    <br>\r\n\r\n\r\n                    <!--摄像头2-->\r\n                    <b-button\r\n                        class=\"visible2 ? null : 'collapsed'\"\r\n                        aria-expanded=\"visible2 ? 'true' : 'false'\"\r\n                        aria-controls   = \"collapse-5\"\r\n                        @click = \"visible2 = !visible2\"\r\n                    >\r\n                      摄像头2开关\r\n                    </b-button>.\r\n\r\n                    <div  style=\"display: flex; justify-content:center; align-items: center; \">\r\n                      <b-collapse id = \"collapse-5\" v-model=\"visible2\" class=\"mt-2\" >\r\n                        <iframe src = \"http://localhost:8087\" width=\"640\" height=\"480\" style=\"transform: scale(0.5);\" />\r\n                      </b-collapse>\r\n                    </div>\r\n\r\n                  </b-card>\r\n\r\n                </b-row>\r\n              </div>\r\n            </b-tab>\r\n\r\n            <b-tab title=\"温湿度控制\">\r\n              <b-card>\r\n                <b-row>\r\n                  <b-col cols=\"12\">\r\n                    <statistic-card-with-area-chart\r\n                        v-if=\"data.subscribersGained\"\r\n                        icon=\"DropletIcon\"\r\n                        :statistic=\"kFormatter(data.subscribersGained.analyticsData.humidity)\"\r\n                        statistic-title=\"当前湿度(%)\"\r\n                        :chart-data=\"data.subscribersGained.series\"\r\n                    />\r\n                    <statistic-card-with-area-chart\r\n                        v-if=\"data.ordersRecevied\"\r\n                        icon=\"ThermometerIcon\"\r\n                        color=\"warning\"\r\n                        :statistic=\"kFormatter(data.ordersRecevied.analyticsData.temperature)\"\r\n                        statistic-title=\"当前温度(°C)\"\r\n                        :chart-data=\"data.ordersRecevied.series\"\r\n                    />\r\n                    <analytics-sales-radar-chart :data=\"data.salesChart\" />\r\n                  </b-col>\r\n                </b-row>\r\n              </b-card>\r\n\r\n\r\n            </b-tab>\r\n\r\n            <b-tab title=\"设置\">\r\n              <b-card-text style=\"font-size: 16px;font-family: 黑体\">\r\n                <img src=\"@/assets/set.png\" style=\"width: 20px;height: 20px;margin-bottom: 5px\"/>\r\n                个性化设置：</b-card-text>\r\n              <b-row>\r\n                <b-col cols=\"12\">\r\n\r\n                  <button @click=\"toggleBackground\" style=\"margin-left: 90px;border-color: #55acee\">切换背景</button>\r\n\r\n                  <img src=\"@/assets/3.png\" style=\"width: 30px;height: 30px;margin-left: 10px\"/>\r\n                  <img src=\"@/assets/picture1.png\" style=\"width: 30px;height: 30px;margin-left: 2px\"/>\r\n                </b-col>\r\n              </b-row>\r\n\r\n\r\n            </b-tab>\r\n\r\n\r\n\r\n          </b-tabs>\r\n          <!--        </dv-border-box-8>-->\r\n        </div>\r\n\r\n      </div>\r\n\r\n    </dv-border-box-9>\r\n\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport echarts from 'echarts';\r\nimport Ripple from 'vue-ripple-directive';\r\nimport BCardCode from '@core/components/b-card-code';\r\nimport dataV from '@jiaminghi/data-view';\r\nimport { borderBox9 } from '@jiaminghi/data-view';\r\n\r\nimport ModalBasic from \"@/views/apps/closingopening/ModalBasic.vue\";\r\nimport ModalTheme from \"@/views/apps/closingopening/ModalTheme.vue\";\r\n\r\nimport SweetAlertBasic from '@/views/extensions/sweet-alerts/SweetAlertBasic.vue'\r\nimport SweetAlertTypes from '@/views/extensions/sweet-alerts/SweetAlertTypes.vue'\r\nimport SweetAlertOption from '@/views/extensions/sweet-alerts/SweetAlertOption.vue'\r\nimport SweetAlertConfirmOption from '@/views/extensions/sweet-alerts/SweetAlertConfirmOption.vue'\r\n\r\n\r\n\r\nimport AnalyticsCongratulation from '@/views/dashboard/analytics/AnalyticsCongratulation'\r\n\r\n// eslint-disable-next-line import/extensions\r\nimport AnalyticsAvgSessions from '@/views/dashboard/analytics/AnalyticsAvgSessions'\r\nimport StatisticCardWithAreaChart from '@core/components/statistics-cards/StatisticCardWithAreaChart.vue';\r\n// eslint-disable-next-line import/no-unresolved\r\nimport AnalyticsSupportTracker from '@/views/dashboard/analytics/AnalyticsSupportTracker.vue'\r\n\r\nimport AnalyticsTimeline from '@/views/dashboard/analytics/AnalyticsTimeline'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport AnalyticsSalesRadarChart from '@/views/dashboard/analytics/AnalyticsSalesRadarChart.vue'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport AnalyticsAppDesign from '@/views/dashboard/analytics/AnalyticsAppDesign.vue'\r\n\r\n// eslint-disable-next-line import/extensions\r\nimport InvoiceList from '@/views/invoice/invoice-list/InvoiceList'\r\n\r\n//import { isActive } from 'nock'\r\n\r\nVue.use(dataV)\r\nVue.use(borderBox9)\r\n\r\nimport Vue from \"vue\";\r\n// eslint-disable-next-line import/first\r\nimport {kFormatter} from '@core/utils/filter';\r\n\r\nimport {\r\n  BButtonGroup,\r\n  BButton,\r\n  BCard,\r\n  BCardHeader,\r\n  BCardText,\r\n  BTabs,\r\n  BTab,\r\n  VBToggle,\r\n  BSidebar,\r\n  VBTogglePlugin,\r\n  BRow,\r\n  BCol,\r\n\r\n  BFormSelect,\r\n  BFormSelectOption,\r\n\r\n  BTable,\r\n  BCardGroup,\r\n  BCollapse,\r\n  BCardFooter,\r\n  BCardBody,\r\n  BFormCheckbox,\r\n  BCardTitle,\r\n} from 'bootstrap-vue'\r\nimport SweetAlertAnimation from './SweetAlertAnimation.vue'\r\nimport SweetAlertPosition from './SweetAlertPosition.vue'\r\n\r\n\r\n\r\nexport default {\r\n  name: 'ThreePageVue',\r\n\r\n  components: {\r\n    SweetAlertTypes,\r\n    ModalTheme,\r\n    ModalBasic,\r\n    StatisticCardWithAreaChart,\r\n    BCardBody,\r\n    VBTogglePlugin,\r\n    BSidebar,\r\n    VBToggle,\r\n    BCollapse,\r\n    BCardHeader,\r\n    BButtonGroup,\r\n    BButton,\r\n    BCard,\r\n    BTable,\r\n    BCardGroup,\r\n    BRow,\r\n    BCol,\r\n    BCardFooter,\r\n    BCardTitle,\r\n    BCardCode,\r\n    BTabs,\r\n    BCardText,\r\n    BTab,\r\n    BFormSelect,\r\n    BFormSelectOption,\r\n    BFormCheckbox,\r\n\r\n    SweetAlertBasic,\r\n    SweetAlertPosition,\r\n    SweetAlertAnimation,\r\n    SweetAlertOption,\r\n    SweetAlertConfirmOption,\r\n\r\n    AnalyticsCongratulation,\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    AnalyticsAvgSessions,\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    AnalyticsSupportTracker,\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    AnalyticsTimeline,\r\n    AnalyticsSalesRadarChart,\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    AnalyticsAppDesign,\r\n    // eslint-disable-next-line vue/no-unused-components\r\n    InvoiceList,\r\n\r\n  },\r\n  directives: {\r\n    Ripple,\r\n    'b-toggle': VBToggle,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      data: {},\r\n      showModal:false,\r\n\r\n      isBlueBackground: false,\r\n\r\n      selectedTemperature:30,//默认值为80°C\r\n\r\n      temperature_options: [\r\n        { value: 30, text: '30°C' },\r\n        { value: 100, text: '100°C' },\r\n      ],\r\n\r\n      counter:0,\r\n\r\n      isEmailSent:false,\r\n\r\n      checkedstatus:false,\r\n      showKalman: false,\r\n      nowtemp: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      x: [10, 10, 10, 10, 10, 10, 10, 10, 10, 10],\r\n      x_pred: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      p_pred: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      z: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      p: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n      q: [0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01, 0.01],\r\n      // r是输入噪声，可以假设为0\r\n      // r:  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      r: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1],\r\n      k: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n      x_update: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      p_update: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n\r\n      switch6: true,\r\n      switch9: true,\r\n      newdata: [],\r\n      // 预测温度\r\n      predictdata1: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      predictdata2: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      predictdata3: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      predictdata4: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      predictdata5: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      predictdata6: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      predictdata7: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      predictdata8: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n      predictdata9: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n\r\n      temperature1: [],\r\n      temperature2: [],\r\n      temperature3: [],\r\n      temperature4: [],\r\n      temperature5: [],\r\n      temperature6: [],\r\n      temperature7: [],\r\n      temperature8: [],\r\n      temperature9: [],\r\n      currenttime: [],\r\n\r\n      legendData: ['原始数据', '卡尔曼预测'],\r\n\r\n      showmodal: false,\r\n      visible: false,\r\n      visible2: false,\r\n      isAcitve: null,\r\n\r\n      chartData1: {\r\n        title: {\r\n          // 将当前temperature1[0]的值显示在标题上\r\n          text: '温度：' ,\r\n          textStyle: {\r\n            fontSize: 20,\r\n          },\r\n        },\r\n        textStyle: {\r\n          fontSize: 10,\r\n        },\r\n        legend: {\r\n          data: ['原始数据', 'chart1-kalman'],\r\n          show: true,\r\n          right:'5%',\r\n          top:'8%',\r\n        },\r\n        //悬停数字\r\n        tooltip: {\r\n          trigger: 'axis',//显示横坐标值\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#6a7985'\r\n            }\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\r\n\r\n          inverse: true,// 设置反向属性\r\n          axisLabel: {\r\n            formatter: function (value) {\r\n              const date = new Date(value);\r\n              //显示几月几号： (date.getMonth() + 1),date.getDate(),\r\n\r\n              // 显示时分秒\r\n              const texts = [\r\n                date.getHours().toString().padStart(2, '0'), // 将小时转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getMinutes().toString().padStart(2, '0'), // 将分钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getSeconds().toString().padStart(2, '0') // 将秒钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n              ];\r\n              //实现时间为xx.xx.xx格式\r\n              return texts.join(':');\r\n\r\n            }\r\n          },\r\n        },\r\n\r\n\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '原始数据',\r\n            icon: 'circle',\r\n\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320, 1340, 1360, 1380],\r\n            type: 'line',\r\n            itemStyle: {\r\n              color: 'rgb(8,46,84)'\r\n            },\r\n            areaStyle: {\r\n              opacity: 0.4,\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                {\r\n                  offset: 0,\r\n                  color: 'rgb(255, 235, 205)'\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: 'rgb(128,128,105)'\r\n                }\r\n\r\n              ])\r\n            },\r\n            smooth: true\r\n          },\r\n          {\r\n            name: 'chart1-kalman',\r\n            icon: 'circle',\r\n            data: [],\r\n            type: 'line',\r\n            smooth: true,\r\n\r\n          },\r\n        ],\r\n\r\n      },\r\n      chartData2: {\r\n        title: {\r\n          text: '温度：',\r\n          textStyle: {\r\n            fontSize: 20,\r\n          },\r\n        },\r\n        textStyle: {\r\n          fontSize: 10,  //图标字体大小\r\n        },\r\n        legend: {\r\n          data: ['原始数据', 'chart2-kalman'],\r\n          show: true,\r\n          right:'5%',\r\n          top:'8%',\r\n        },\r\n        //悬停数字\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#6a7985'\r\n            }\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\r\n          inverse: true, // 设置反向属性\r\n          axisLabel: {\r\n            formatter: function (value, index) {\r\n              const date = new Date(value);\r\n              //显示几月几号： (date.getMonth() + 1),date.getDate(),\r\n\r\n              // 显示时分秒\r\n              const texts = [\r\n                date.getHours().toString().padStart(2, '0'), // 将小时转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getMinutes().toString().padStart(2, '0'), // 将分钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getSeconds().toString().padStart(2, '0') // 将秒钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n              ];\r\n              //实现时间为xx.xx.xx格式\r\n              return texts.join(':');\r\n\r\n            }\r\n          },\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '原始数据',\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320, 1340, 1360, 1380],\r\n            type: 'line',\r\n            itemStyle: {\r\n              color: 'rgb(39,64,139)'\r\n            },\r\n            areaStyle: {\r\n              opacity: 0.4,\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                {\r\n                  offset: 0,\r\n                  color: 'rgb(255, 235, 205)'\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: 'rgb(77, 119, 255)'\r\n                }\r\n\r\n              ])\r\n            },\r\n            smooth: true\r\n          },\r\n          {\r\n            name: 'chart2-kalman',\r\n            data: [],\r\n            type: 'line',\r\n            smooth: true,\r\n          }\r\n        ]\r\n      },\r\n      chartData3: {\r\n        title: {\r\n          text: '温度：',\r\n          textStyle: {\r\n            fontSize: 20,\r\n          },\r\n        },\r\n        textStyle: {\r\n          fontSize: 10,\r\n        },\r\n        legend: {\r\n          data: ['原始数据', 'chart3-kalman'],\r\n          show: true,\r\n          right:'5%',\r\n          top:'8%',\r\n        },\r\n        //悬停数字\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#6a7985'\r\n            }\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\r\n          inverse: true, // 设置反向属性\r\n          axisLabel: {\r\n            formatter: function (value, index) {\r\n              const date = new Date(value);\r\n              //显示几月几号： (date.getMonth() + 1),date.getDate(),\r\n\r\n              // 显示时分秒\r\n              const texts = [\r\n                date.getHours().toString().padStart(2, '0'), // 将小时转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getMinutes().toString().padStart(2, '0'), // 将分钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getSeconds().toString().padStart(2, '0') // 将秒钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n              ];\r\n              //实现时间为xx.xx.xx格式\r\n              return texts.join(':');\r\n\r\n            }\r\n          },\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '原始数据',\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320, 1340, 1360, 1380],\r\n            type: 'line',\r\n            itemStyle: {\r\n              color: 'rgb(135,38,87)'\r\n            },\r\n            areaStyle: {\r\n              opacity: 0.4,\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                {\r\n                  offset: 0,\r\n                  color: 'rgb(255, 250, 205)'\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: 'rgb(255,20,147)'\r\n                }\r\n\r\n              ])\r\n            },\r\n            smooth: true\r\n          },\r\n          {\r\n            name: 'chart3-kalman',\r\n            data: [],\r\n            type: 'line',\r\n            smooth: true,\r\n          }\r\n        ]\r\n      },\r\n      chartData4: {\r\n        title: {\r\n          text: '温度：',\r\n          textStyle: {\r\n            fontSize: 20,\r\n          },\r\n        },\r\n        textStyle: {\r\n          fontSize: 10,\r\n        },\r\n        legend: {\r\n          data: ['原始数据', 'chart4-kalman'],\r\n          show: true,\r\n          right:'5%',\r\n          top:'8%',\r\n        },\r\n        //悬停数字\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#6a7985'\r\n            }\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\r\n          inverse: true, // 设置反向属性\r\n          axisLabel: {\r\n            formatter: function (value, index) {\r\n              const date = new Date(value);\r\n              //显示几月几号： (date.getMonth() + 1),date.getDate(),\r\n\r\n              // 显示时分秒\r\n              const texts = [\r\n                date.getHours().toString().padStart(2, '0'), // 将小时转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getMinutes().toString().padStart(2, '0'), // 将分钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getSeconds().toString().padStart(2, '0') // 将秒钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n              ];\r\n              //实现时间为xx.xx.xx格式\r\n              return texts.join(':');\r\n\r\n            }\r\n          },\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '原始数据',\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320, 1340, 1360, 1380],\r\n            type: 'line',\r\n            itemStyle: {\r\n              color: 'rgb(255,97,3)'\r\n            },\r\n            areaStyle: {\r\n              opacity: 0.4,\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                {\r\n                  offset: 0,\r\n                  color: 'rgb(255, 235, 205)'\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: 'rgb(255,140,0)'\r\n                }\r\n\r\n              ])\r\n            },\r\n            smooth: true\r\n          },\r\n          {\r\n            name: 'chart4-kalman',\r\n            data: [],\r\n            type: 'line',\r\n            smooth: true,\r\n          }\r\n        ]\r\n      },\r\n      chartData5: {\r\n        title: {\r\n          text: '温度：',\r\n          textStyle: {\r\n            fontSize: 20,\r\n          },\r\n        },\r\n        textStyle: {\r\n          fontSize: 10,\r\n        },\r\n        legend: {\r\n          data: ['原始数据', 'chart5-kalman'],\r\n          show: true,\r\n          right:'5%',\r\n          top:'8%',\r\n        },\r\n        //悬停数字\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#6a7985'\r\n            }\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\r\n          inverse: true, // 设置反向属性\r\n          axisLabel: {\r\n            formatter: function (value, index) {\r\n              const date = new Date(value);\r\n              //显示几月几号： (date.getMonth() + 1),date.getDate(),\r\n\r\n              // 显示时分秒\r\n              const texts = [\r\n                date.getHours().toString().padStart(2, '0'), // 将小时转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getMinutes().toString().padStart(2, '0'), // 将分钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getSeconds().toString().padStart(2, '0') // 将秒钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n              ];\r\n              //实现时间为xx.xx.xx格式\r\n              return texts.join(':');\r\n\r\n            }\r\n          },\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '原始数据',\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320, 1340, 1360, 1380],\r\n            type: 'line',\r\n            itemStyle: {\r\n              color: 'rgb(48, 128, 20 )'\r\n            },\r\n            areaStyle: {\r\n              opacity: 0.4,\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                {\r\n                  offset: 0,\r\n                  color: 'rgb(255, 250, 205)'\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: 'rgb(127, 255, 0)'\r\n                }\r\n              ])\r\n            },\r\n            smooth: true\r\n          },\r\n          {\r\n            name: 'chart5-kalman',\r\n            data: [],\r\n            type: 'line',\r\n            smooth: true,\r\n          }\r\n        ]\r\n      },\r\n      chartData6: {\r\n        title: {\r\n          text: '温度：',\r\n          textStyle: {\r\n            fontSize: 20,\r\n          },\r\n        },\r\n        textStyle: {\r\n          fontSize: 10,\r\n        },\r\n        legend: {\r\n          data: ['原始数据', 'chart6-kalman'],\r\n          show: true,\r\n          right:'5%',\r\n          top:'8%',\r\n        },\r\n        //悬停数字\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#6a7985'\r\n            }\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\r\n          inverse: true, // 设置反向属性\r\n          axisLabel: {\r\n            formatter: function (value, index) {\r\n              const date = new Date(value);\r\n              //显示几月几号： (date.getMonth() + 1),date.getDate(),\r\n\r\n              // 显示时分秒\r\n              const texts = [\r\n                date.getHours().toString().padStart(2, '0'), // 将小时转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getMinutes().toString().padStart(2, '0'), // 将分钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getSeconds().toString().padStart(2, '0') // 将秒钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n              ];\r\n              //实现时间为xx.xx.xx格式\r\n              return texts.join(':');\r\n\r\n            }\r\n          },\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '原始数据',\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320, 1340, 1360, 1380],\r\n            type: 'line',\r\n\r\n            itemStyle: {\r\n              color: 'rgb(106,90,205)'\r\n            },\r\n            areaStyle: {\r\n              opacity: 0.4,\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                {\r\n                  offset: 0,\r\n                  color: 'rgb(255, 235, 205)'\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: 'rgb(116, 21, 219)'\r\n                }\r\n\r\n              ])\r\n            },\r\n            smooth: true\r\n          },\r\n          {\r\n            name: 'chart6-kalman',\r\n            data: [],\r\n            type: 'line',\r\n            smooth: true,\r\n          }\r\n        ]\r\n      },\r\n      chartData7: {\r\n        title: {\r\n          text: '温度：',\r\n          textStyle: {\r\n            fontSize: 20,\r\n          },\r\n        },\r\n        textStyle: {\r\n          fontSize: 10,\r\n        },\r\n        legend: {\r\n          data: ['原始数据', 'chart7-kalman'],\r\n          show: true,\r\n          right:'5%',\r\n          top:'8%',\r\n        },\r\n        //悬停数字\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#6a7985'\r\n            }\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\r\n          inverse: true, // 设置反向属性\r\n          axisLabel: {\r\n            formatter: function (value, index) {\r\n              const date = new Date(value);\r\n              //显示几月几号： (date.getMonth() + 1),date.getDate(),\r\n\r\n              // 显示时分秒\r\n              const texts = [\r\n                date.getHours().toString().padStart(2, '0'), // 将小时转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getMinutes().toString().padStart(2, '0'), // 将分钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getSeconds().toString().padStart(2, '0') // 将秒钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n              ];\r\n              //实现时间为xx.xx.xx格式\r\n              return texts.join(':');\r\n\r\n            }\r\n          },\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '原始数据',\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320, 1340, 1360, 1380],\r\n            type: 'line',\r\n            itemStyle: {\r\n              color: 'rgb(205,133,0)'\r\n            },\r\n            areaStyle: {\r\n              opacity: 0.4,\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                {\r\n                  offset: 0,\r\n                  color: 'rgb(240, 230, 140)'\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: 'rgb(255, 255, 0)'\r\n                }\r\n\r\n              ])\r\n            },\r\n            smooth: true\r\n          },\r\n          {\r\n            name: 'chart7-kalman',\r\n            data: [],\r\n            type: 'line',\r\n            smooth: true,\r\n          }\r\n        ]\r\n      },\r\n\r\n\r\n      chartData8: {\r\n        title: {\r\n          text: '温度：',\r\n          textStyle: {\r\n            fontSize: 20,\r\n          },\r\n        },\r\n        textStyle: {\r\n          fontSize: 10,\r\n        },\r\n        legend: {\r\n          data: ['原始数据', 'chart8-kalman'],\r\n          show: true,\r\n          right:'5%',\r\n          top:'8%',\r\n        },\r\n        //悬停数字\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#6a7985'\r\n            }\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\r\n          inverse: true, // 设置反向属性\r\n          axisLabel: {\r\n            formatter: function (value, index) {\r\n              const date = new Date(value);\r\n              //显示几月几号： (date.getMonth() + 1),date.getDate(),\r\n\r\n              // 显示时分秒\r\n              const texts = [\r\n                date.getHours().toString().padStart(2, '0'), // 将小时转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getMinutes().toString().padStart(2, '0'), // 将分钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getSeconds().toString().padStart(2, '0') // 将秒钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n              ];\r\n              //实现时间为xx.xx.xx格式\r\n              return texts.join(':');\r\n\r\n            }\r\n          },\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '原始数据',\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320, 1340, 1360, 1380],\r\n            type: 'line',\r\n            itemStyle: {\r\n              color: 'rgb(178,34,34)'\r\n            },\r\n            areaStyle: {\r\n              opacity: 0.4,\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                {\r\n                  offset: 0,\r\n                  color: 'rgb(255, 235, 205)'\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: 'rgb(255,48, 48)'\r\n                }\r\n\r\n              ])\r\n            },\r\n            smooth: true\r\n          },\r\n          {\r\n            name: 'chart8-kalman',\r\n            data: [],\r\n            type: 'line',\r\n            smooth: true,\r\n          }\r\n        ]\r\n      },\r\n\r\n\r\n      chartData9: {\r\n        title: {\r\n          text: '温度：',\r\n          textStyle: {\r\n            fontSize: 20,\r\n          },\r\n        },\r\n        textStyle: {\r\n          fontSize: 10,\r\n        },\r\n        legend: {\r\n          data: ['原始数据', 'chart9-kalman'],\r\n          show: true,\r\n          right:'5%',\r\n          top:'8%',\r\n        },\r\n        //悬停数字\r\n        tooltip: {\r\n          trigger: 'axis',\r\n          axisPointer: {\r\n            type: 'cross',\r\n            label: {\r\n              backgroundColor: '#6a7985'\r\n            }\r\n          }\r\n        },\r\n        xAxis: {\r\n          type: 'category',\r\n          boundaryGap: false,\r\n          data: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\r\n          inverse: true, // 设置反向属性\r\n          axisLabel: {\r\n            formatter: function (value, index) {\r\n              const date = new Date(value);\r\n              //显示几月几号： (date.getMonth() + 1),date.getDate(),\r\n\r\n              // 显示时分秒\r\n              const texts = [\r\n                date.getHours().toString().padStart(2, '0'), // 将小时转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getMinutes().toString().padStart(2, '0'), // 将分钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n                date.getSeconds().toString().padStart(2, '0') // 将秒钟转换成字符串，并填充到 2 位，用字符 '0' 来填充\r\n              ];\r\n              //实现时间为xx.xx.xx格式\r\n              return texts.join(':');\r\n\r\n            }\r\n          },\r\n        },\r\n        yAxis: {\r\n          type: 'value'\r\n        },\r\n        series: [\r\n          {\r\n            name: '原始数据',\r\n            data: [820, 932, 901, 934, 1290, 1330, 1320, 1340, 1360, 1380],\r\n            type: 'line',\r\n            itemStyle: {\r\n              color: 'rgb(95, 158, 160)'\r\n            },\r\n            areaStyle: {\r\n              opacity: 0.4,\r\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\r\n                {\r\n                  offset: 0,\r\n                  color: 'rgb(255,246,143)'\r\n                },\r\n                {\r\n                  offset: 1,\r\n                  color: 'rgb(0, 128, 128)'\r\n                }\r\n\r\n              ])\r\n            },\r\n            smooth: true\r\n          },\r\n          {\r\n            name: 'chart9-kalman',\r\n            data: [],\r\n            type: 'line',\r\n            smooth: true,\r\n          }\r\n        ]\r\n      },\r\n\r\n    }\r\n  },\r\n  created() {\r\n    // data\r\n    this.$http.get('/analytics/data')\r\n        .then(response => { this.data = response.data })\r\n  },\r\n  mounted() {\r\n\r\n    const chart1 = echarts.init(this.$refs.chart1);\r\n    const chart2 = echarts.init(this.$refs.chart2);\r\n    const chart3 = echarts.init(this.$refs.chart3);\r\n    const chart4 = echarts.init(this.$refs.chart4);\r\n    const chart5 = echarts.init(this.$refs.chart5);\r\n    const chart6 = echarts.init(this.$refs.chart6);\r\n    const chart7 = echarts.init(this.$refs.chart7);\r\n    const chart8 = echarts.init(this.$refs.chart8);\r\n    const chart9 = echarts.init(this.$refs.chart9);\r\n\r\n    chart1.setOption(this.chartData1);\r\n    chart2.setOption(this.chartData2);\r\n    chart3.setOption(this.chartData3);\r\n    chart4.setOption(this.chartData4);\r\n    chart5.setOption(this.chartData5);\r\n    chart6.setOption(this.chartData6);\r\n    chart7.setOption(this.chartData7);\r\n    chart8.setOption(this.chartData8);\r\n    chart9.setOption(this.chartData9);\r\n    setInterval(() => {\r\n\r\n      if (this.checkedstatus === true) {\r\n        // 数组predictdata1右移\r\n        for (let i = 9; i >= 0; i--) {\r\n          this.predictdata1[i + 1] = this.predictdata1[i];\r\n          this.predictdata2[i + 1] = this.predictdata2[i];\r\n          this.predictdata3[i + 1] = this.predictdata3[i];\r\n          this.predictdata4[i + 1] = this.predictdata4[i];\r\n          this.predictdata5[i + 1] = this.predictdata5[i];\r\n          this.predictdata6[i + 1] = this.predictdata6[i];\r\n          this.predictdata7[i + 1] = this.predictdata7[i];\r\n          this.predictdata8[i + 1] = this.predictdata8[i];\r\n          this.predictdata9[i + 1] = this.predictdata9[i];\r\n        }\r\n        // 获取kalmanFilter()的值\r\n        this.predictdata1[0] = this.kalmanFilter(0);\r\n        this.predictdata2[0] = this.kalmanFilter(1);\r\n        this.predictdata3[0] = this.kalmanFilter(2);\r\n        this.predictdata4[0] = this.kalmanFilter(3);\r\n        this.predictdata5[0] = this.kalmanFilter(4);\r\n        this.predictdata6[0] = this.kalmanFilter(5);\r\n        this.predictdata7[0] = this.kalmanFilter(6);\r\n        this.predictdata8[0] = this.kalmanFilter(7);\r\n        this.predictdata9[0] = this.kalmanFilter(8);\r\n\r\n        this.chartData1.series[1].data = this.predictdata1;\r\n        this.chartData2.series[1].data = this.predictdata2;\r\n        this.chartData3.series[1].data = this.predictdata3;\r\n        this.chartData4.series[1].data = this.predictdata4;\r\n        this.chartData5.series[1].data = this.predictdata5;\r\n        this.chartData6.series[1].data = this.predictdata6;\r\n        this.chartData7.series[1].data = this.predictdata7;\r\n        this.chartData8.series[1].data = this.predictdata8;\r\n        this.chartData9.series[1].data = this.predictdata9;\r\n\r\n\r\n        this.chartData1.legend.data = ['原始数据', 'chart1-kalman']\r\n        this.chartData2.legend.data = ['原始数据', 'chart2-kalman']\r\n        this.chartData3.legend.data = ['原始数据', 'chart3-kalman']\r\n        this.chartData4.legend.data = ['原始数据', 'chart4-kalman']\r\n        this.chartData5.legend.data = ['原始数据', 'chart5-kalman']\r\n        this.chartData6.legend.data = ['原始数据', 'chart6-kalman']\r\n        this.chartData7.legend.data = ['原始数据', 'chart7-kalman']\r\n        this.chartData8.legend.data = ['原始数据', 'chart8-kalman']\r\n        this.chartData9.legend.data = ['原始数据', 'chart9-kalman']\r\n\r\n\r\n        if (this.x_update[0] > this.selectedTemperature || this.x_update[1] >  this.selectedTemperature || this.x_update[2] >  this.selectedTemperature || this.x_update[3] >  this.selectedTemperature || this.x_update[4] >  this.selectedTemperature || this.x_update[5] >  this.selectedTemperature || this.x_update[6] >  this.selectedTemperature || this.x_update[7] >  this.selectedTemperature || this.x_update[8] >  this.selectedTemperature ){\r\n          // if (this.checkedstatus && (this.x_update[0] > this.selectedTemperature || this.x_update[1] > this.selectedTemperature || this.x_update[2] >  this.selectedTemperature || this.x_update[3] >  this.selectedTemperature || this.x_update[4] >  this.selectedTemperature || this.x_update[5] >  this.selectedTemperature || this.x_update[6] >  this.selectedTemperature || this.x_update[7] >  this.selectedTemperature || this.x_update[8] >  this.selectedTemperature || this.x_update[9] >  this.selectedTemperature)){\r\n\r\n          // javascript中的setTimeout函数，最好只用一个，而不是嵌套使用，比如setTimeout{ setTimeout{},60000 },3000 是不可以的，因为JS是单线程的，setTimeout是异步的，所以setTimeout{ setTimeout{},60000 }会先执行，而setTimeout{},60000会在3000ms后执行，所以这样就会出现问题，所以最好只用一个setTimeout，而不是嵌套使用，如果为了实现10min，就可以每3s 计数器加1，直到计数器=2000，再发送第n次邮件，这样就可以实现10min发送一次邮件， 最后再把计数器复位。\r\n          if  (this.isEmailSent === false && this.counter < 5) {\r\n            this.showModal = true ;\r\n            this.sendEmail();\r\n            this.counter = this.counter +1 ;\r\n            console.log(\"counter =  \", this.counter);\r\n            this.isEmailSent = true;\r\n          }\r\n          else if (this.isEmailSent === true && this.counter < 5) {\r\n            this.counter = this.counter +1 ;\r\n            console.log(\"counter =  \", this.counter);\r\n            this.isEmailSent = true;\r\n          }\r\n          else\r\n          {\r\n            this.counter = 0;\r\n            this.isEmailSent = false;\r\n          }\r\n        }\r\n\r\n      } else {\r\n        this.chartData1.legend.data = []\r\n        this.chartData2.legend.data = []\r\n        this.chartData3.legend.data = []\r\n        this.chartData4.legend.data = []\r\n        this.chartData5.legend.data = []\r\n        this.chartData6.legend.data = []\r\n        this.chartData7.legend.data = []\r\n        this.chartData8.legend.data = []\r\n        this.chartData9.legend.data = []\r\n\r\n      }\r\n      // 获取最新的数据\r\n      // this.generateData();\r\n\r\n      const now = new Date();\r\n      // 获取3s前的时间\r\n      const before3s = new Date(now.getTime() - 3000);\r\n      const before6s = new Date(now.getTime() - 6000);\r\n      const before9s = new Date(now.getTime() - 9000);\r\n      const before12s = new Date(now.getTime() - 12000);\r\n      const before15s = new Date(now.getTime() - 15000);\r\n      const before18s = new Date(now.getTime() - 18000);\r\n      const before21s = new Date(now.getTime() - 21000);\r\n      const before24s = new Date(now.getTime() - 24000);\r\n      const before27s = new Date(now.getTime() - 27000);\r\n      // const before30s = new Date(now.getTime() - 30000);\r\n\r\n      this.timeserial = [now, before3s, before6s, before9s, before12s, before15s, before18s, before21s, before24s, before27s];\r\n      // const hour = now.getHours();\r\n\r\n      this.newdata = this.generateData();\r\n\r\n      // 调用接口获取测温数据并更新 temperatureData 变量\r\n\r\n      this.chartData1.xAxis.data = this.timeserial;\r\n      this.chartData2.xAxis.data = this.timeserial;\r\n      this.chartData3.xAxis.data = this.timeserial;\r\n      this.chartData4.xAxis.data = this.timeserial;\r\n      this.chartData5.xAxis.data = this.timeserial;\r\n      this.chartData6.xAxis.data = this.timeserial;\r\n      this.chartData7.xAxis.data = this.timeserial;\r\n      this.chartData8.xAxis.data = this.timeserial;\r\n      this.chartData9.xAxis.data = this.timeserial;\r\n\r\n\r\n      // 将时间序列 timeserial 给chartData1的xAxis\r\n\r\n      this.chartData1.series[0].data = this.temperature1;\r\n      this.chartData2.series[0].data = this.temperature2;\r\n      this.chartData3.series[0].data = this.temperature3;\r\n      this.chartData4.series[0].data = this.temperature4;\r\n      this.chartData5.series[0].data = this.temperature5;\r\n      this.chartData6.series[0].data = this.temperature6;\r\n      this.chartData7.series[0].data = this.temperature7;\r\n      this.chartData8.series[0].data = this.temperature8;\r\n      this.chartData9.series[0].data = this.temperature9;\r\n\r\n      chart1.setOption(this.chartData1);\r\n      chart2.setOption(this.chartData2);\r\n      chart3.setOption(this.chartData3);\r\n      chart4.setOption(this.chartData4);\r\n      chart5.setOption(this.chartData5);\r\n      chart6.setOption(this.chartData6);\r\n      chart7.setOption(this.chartData7);\r\n      chart8.setOption(this.chartData8);\r\n      chart9.setOption(this.chartData9);\r\n\r\n      // m不是全局变量所以无法在vue的mounted调用method中内容\r\n\r\n      // 可以在这里处理报警温度判断\r\n\r\n      console.log(\"selectedTemperature =  \", this.selectedTemperature);\r\n\r\n\r\n    }, 3000);\r\n\r\n  },\r\n  methods: {\r\n    kFormatter,\r\n\r\n    closeModal() {\r\n      this.$refs.modalRef.hide();//隐藏弹窗\r\n    },\r\n\r\n    sendEmail() {\r\n      // Axios GET请求应该将数据作为第二个参数包含，但是在代码中，将数据作为URL本身中的对象传递。要解决这个问题，应该修改代码，使用Axios GET请求的params属性来传递数据。\r\n      axios\r\n          .get('http://localhost:3000/sendemail', {\r\n            params:{\r\n              to:['2634363039@qq.com','1927137693@qq.com'],//邮箱群发多用户\r\n              subject: '温度超过100°C警告',\r\n              text: '温度超过100°C，请注意安全！'\r\n            }\r\n          })\r\n          .then(response => {\r\n            console.log(response.data);\r\n            this.isEmailSent = true; // 设置邮件发送状态为已发送\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n    },\r\n\r\n\r\n    // 这段代码是显示隐藏曲线吗？对\r\n    showKalmanChange(value) {\r\n      let list = ''\r\n      if (value) {\r\n        list = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n      } else {\r\n        list = []\r\n      }\r\n      this.chartData1.series[1].data = list\r\n      this.chartData2.series[1].data = list\r\n      this.chartData3.series[1].data = list\r\n      this.chartData4.series[1].data = list\r\n      this.chartData5.series[1].data = list\r\n      this.chartData6.series[1].data = list\r\n      this.chartData7.series[1].data = list\r\n      this.chartData8.series[1].data = list\r\n      this.chartData9.series[1].data = list\r\n\r\n      const chart1 = echarts.init(this.$refs.chart1);\r\n      const chart2 = echarts.init(this.$refs.chart2);\r\n      const chart3 = echarts.init(this.$refs.chart3);\r\n      const chart4 = echarts.init(this.$refs.chart4);\r\n      const chart5 = echarts.init(this.$refs.chart5);\r\n      const chart6 = echarts.init(this.$refs.chart6);\r\n      const chart7 = echarts.init(this.$refs.chart7);\r\n      const chart8 = echarts.init(this.$refs.chart8);\r\n      const chart9 = echarts.init(this.$refs.chart9);\r\n\r\n      chart1.setOption(this.chartData1);\r\n      chart2.setOption(this.chartData2);\r\n      chart3.setOption(this.chartData3);\r\n      chart4.setOption(this.chartData4);\r\n      chart5.setOption(this.chartData5);\r\n      chart6.setOption(this.chartData6);\r\n      chart7.setOption(this.chartData7);\r\n      chart8.setOption(this.chartData8);\r\n      chart9.setOption(this.chartData9);\r\n\r\n    },\r\n\r\n    kalmanFilter(index) {\r\n      let m;\r\n      this.nowtemp[0] = this.temperature1[0]\r\n      this.nowtemp[1] = this.temperature2[0]\r\n      this.nowtemp[2] = this.temperature3[0]\r\n      this.nowtemp[3] = this.temperature4[0]\r\n      this.nowtemp[4] = this.temperature5[0]\r\n      this.nowtemp[5] = this.temperature6[0]\r\n      this.nowtemp[6] = this.temperature7[0]\r\n      this.nowtemp[7] = this.temperature8[0]\r\n      this.nowtemp[8] = this.temperature9[0]\r\n      m = index\r\n\r\n      // for (m = 0; m <= 8; m++) {\r\n      this.x_pred[m] = this.x[m]\r\n      this.p_pred[m] = this.p[m] + this.q[m]\r\n      // 更新状态\r\n      if (this.nowtemp[m] != null) {\r\n        this.z[m] = this.nowtemp[m]\r\n        this.k[m] = this.p_pred[m] / (this.p_pred[m] + this.r[m])\r\n        if (this.x[m] != null) {\r\n          this.x_update[m] = this.x_pred[m] + this.k[m] * (this.z[m] - this.x_pred[m])\r\n          this.p_update[m] = (1 - this.k[m]) * this.p_pred[m]\r\n          this.x[m] = this.x_update[m]\r\n          this.p[m] = this.p_update[m]\r\n          return this.x_update[m]\r\n        } else {\r\n          console.log(\"x[m] is NaN\", m)\r\n        }\r\n      } else {\r\n        console.log(\"nowtemp is NaN\", m)\r\n      }\r\n      // }\r\n    },\r\n\r\n    generateData() {\r\n      axios.get('http://localhost:10866/getdbtemperature').then((response) => {\r\n        this.temperature1 = response.data.map(item => item.data1);\r\n        this.temperature2 = response.data.map(item => item.data2);\r\n        this.temperature3 = response.data.map(item => item.data3);\r\n        this.temperature4 = response.data.map(item => item.data4);\r\n        this.temperature5 = response.data.map(item => item.data5);\r\n        this.temperature6 = response.data.map(item => item.data6);\r\n        this.temperature7 = response.data.map(item => item.data7);\r\n        this.temperature8 = response.data.map(item => item.data8);\r\n        this.temperature9 = response.data.map(item => item.data9);\r\n\r\n      }).catch((error) => {\r\n        console.log(error);\r\n      });\r\n      if (this.temperature1.length === 0) {\r\n        return;\r\n      }\r\n      return this.temperature1, this.temperature2, this.temperature3, this.temperature4, this.temperature5, this.temperature6, this.temperature7, this.temperature8, this.temperature9 ;\r\n    },\r\n    toggleBackground() {\r\n      this.isBlueBackground = !this.isBlueBackground;\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import '~@core/scss/base/bootstrap-extended/include';\r\n@import '~@core/scss/base/components/variables-dark';\r\n\r\n//主页面\r\n.full-screen {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  max-height: 100vh;\r\n}\r\n\r\n\r\n\r\n.content {\r\n  display: flex;\r\n  flex-direction: column;\r\n  flex: 1;\r\n}\r\n\r\n.tab-content-container-nine {\r\n  max-height: 250px;\r\n  overflow: auto;\r\n}\r\n\r\n\r\n.tabs-container {\r\n  margin-top: 10px;\r\n  margin-left: 20px;\r\n}\r\n\r\n.index-background {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  background-image: url(\"~@/assets/3.png\");/*  ~@使用相对路径  */\r\n  background-size: cover;\r\n  z-index: -1;\r\n  font-family: 微软雅黑;\r\n  font-size: 18px;\r\n\r\n}\r\n\r\n\r\n\r\n.custom-warning-tab .nav-link.active,\r\n.custom-warning-tab .nav-link:hover {\r\n  background-color:#FFC125 ;\r\n  border-color:#FFC125;\r\n  color: #fff;\r\n\r\n}\r\n\r\n.custom-warning-tab .nav-pills .nav-link.active,\r\n.custom-warning-tab .nav-pills .show > .nav-link {\r\n  background-color: #FFA500; /* Set the background color for active tab buttons */\r\n  border-color: #FFA500; /* Set the border color for active tab buttons */\r\n}\r\n\r\n//九点测温 --告警页面\r\n.custom-title {\r\n  text-align: center;\r\n\r\n  font-family: 微软雅黑;\r\n}\r\n\r\n.attention-title {\r\n  text-align: center;\r\n  font-family: 微软雅黑;\r\n}\r\n\r\n.chuneng1{\r\n  text-align: center;\r\n  font-family: 微软雅黑;\r\n  color:\t#79CDCD;\r\n}\r\n\r\n.chuneng2{\r\n  text-align: center;\r\n  font-family: 微软雅黑;\r\n  color:#00868B;\r\n}\r\n\r\n\r\n\r\n\r\n.dark-layout {\r\n  div ::v-deep .card .card-body {\r\n    .b-overlay {\r\n      .bg-light {\r\n        background-color: $theme-dark-body-bg !important;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.gsm-card {\r\n  background: rgba(255, 255, 255, 0.25);\r\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\r\n  backdrop-filter: blur(4px);\r\n  -webkit-backdrop-filter: blur(4px);\r\n\r\n  border-radius: 20px;\r\n  border: 1px solid rgba(255, 255, 255, 0.18);\r\n}\r\n\r\n\r\n.blue-background {\r\n  background-image: url(\"~@/assets/picture1.png\");\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  background-size: cover;\r\n\r\n}\r\n\r\n</style>\r\n"]}]}