{"remainingRequest":"C:\\Users\\gs\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\vuexy-starter-kit - exercise\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\gs\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\vuexy-starter-kit - exercise\\src\\@core\\layouts\\layout-vertical\\components\\vertical-nav-menu\\VerticalNavMenu.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\gs\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\vuexy-starter-kit - exercise\\src\\@core\\layouts\\layout-vertical\\components\\vertical-nav-menu\\VerticalNavMenu.vue","mtime":1692242336094},{"path":"C:\\Users\\gs\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\vuexy-starter-kit - exercise\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gs\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\vuexy-starter-kit - exercise\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\gs\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\vuexy-starter-kit - exercise\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\gs\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\vuexy-starter-kit - exercise\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gs\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\vuexy-starter-kit - exercise\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\gs\\Desktop\\iot_admin\\vue-version\\vuexy-bootstrapvue\\vuexy-starter-kit - exercise\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQpAaW1wb3J0ICJ+QGNvcmUvc2Nzcy9iYXNlL2NvcmUvbWVudS9tZW51LXR5cGVzL3ZlcnRpY2FsLW1lbnUuc2NzcyI7DQo="},{"version":3,"sources":["VerticalNavMenu.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgKA","file":"VerticalNavMenu.vue","sourceRoot":"src/@core/layouts/layout-vertical/components/vertical-nav-menu","sourcesContent":["<template>\r\n  <div\r\n    class=\"main-menu menu-fixed menu-accordion menu-shadow\"\r\n    :class=\"[\r\n      { 'expanded': !isVerticalMenuCollapsed || (isVerticalMenuCollapsed && isMouseHovered) },\r\n      skin === 'semi-dark' ? 'menu-dark' : 'menu-light'\r\n    ]\"\r\n    @mouseenter=\"updateMouseHovered(true)\"\r\n    @mouseleave=\"updateMouseHovered(false)\"\r\n  >\r\n    <!-- main menu header-->\r\n    <div class=\"navbar-header expanded\">\r\n      <slot\r\n        name=\"header\"\r\n        :toggleVerticalMenuActive=\"toggleVerticalMenuActive\"\r\n        :toggleCollapsed=\"toggleCollapsed\"\r\n        :collapseTogglerIcon=\"collapseTogglerIcon\"\r\n      >\r\n        <ul class=\"nav navbar-nav flex-row\">\r\n\r\n          <!-- Logo & Text -->\r\n          <li class=\"nav-item mr-auto\">\r\n            <b-link\r\n              class=\"navbar-brand\"\r\n              to=\"/\"\r\n            >\r\n              <span class=\"brand-logo\">\r\n                <b-img\r\n                  :src=\"appLogoImage\"\r\n                  alt=\"logo\"\r\n                />\r\n              </span>\r\n              <h2 class=\"brand-text\">\r\n                {{ appName }}\r\n              </h2>\r\n            </b-link>\r\n          </li>\r\n\r\n          <!-- Toggler Button -->\r\n          <li class=\"nav-item nav-toggle\">\r\n            <b-link class=\"nav-link modern-nav-toggle\">\r\n              <feather-icon\r\n                icon=\"XIcon\"\r\n                size=\"20\"\r\n                class=\"d-block d-xl-none\"\r\n                @click=\"toggleVerticalMenuActive\"\r\n              />\r\n              <feather-icon\r\n                :icon=\"collapseTogglerIconFeather\"\r\n                size=\"20\"\r\n                class=\"d-none d-xl-block collapse-toggle-icon\"\r\n                @click=\"toggleCollapsed\"\r\n              />\r\n            </b-link>\r\n          </li>\r\n        </ul>\r\n      </slot>\r\n    </div>\r\n    <!-- / main menu header-->\r\n\r\n    <!-- Shadow -->\r\n    <div\r\n      :class=\"{'d-block': shallShadowBottom}\"\r\n      class=\"shadow-bottom\"\r\n    />\r\n\r\n    <!-- main menu content-->\r\n    <vue-perfect-scrollbar\r\n      :settings=\"perfectScrollbarSettings\"\r\n      class=\"main-menu-content scroll-area\"\r\n      tagname=\"ul\"\r\n      @ps-scroll-y=\"evt => { shallShadowBottom = evt.srcElement.scrollTop > 0 }\"\r\n    >\r\n      <vertical-nav-menu-items\r\n        :items=\"navMenuItems\"\r\n        class=\"navigation navigation-main\"\r\n      />\r\n    </vue-perfect-scrollbar>\r\n    <!-- /main menu content-->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport navMenuItems from '@/navigation/vertical'\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\nimport { BLink, BImg } from 'bootstrap-vue'\r\nimport { provide, computed, ref } from '@vue/composition-api'\r\nimport useAppConfig from '@core/app-config/useAppConfig'\r\nimport { $themeConfig } from '@themeConfig'\r\nimport VerticalNavMenuItems from './components/vertical-nav-menu-items/VerticalNavMenuItems.vue'\r\nimport useVerticalNavMenu from './useVerticalNavMenu'\r\n\r\nexport default {\r\n  components: {\r\n    VuePerfectScrollbar,\r\n    VerticalNavMenuItems,\r\n    BLink,\r\n    BImg,\r\n  },\r\n  props: {\r\n    isVerticalMenuActive: {\r\n      type: Boolean,\r\n      required: true,\r\n    },\r\n    toggleVerticalMenuActive: {\r\n      type: Function,\r\n      required: true,\r\n    },\r\n  },\r\n  setup(props) {\r\n    const {\r\n      isMouseHovered,\r\n      isVerticalMenuCollapsed,\r\n      collapseTogglerIcon,\r\n      toggleCollapsed,\r\n      updateMouseHovered,\r\n    } = useVerticalNavMenu(props)\r\n\r\n    const { skin } = useAppConfig()\r\n\r\n    // Shadow bottom is UI specific and can be removed by user => It's not in `useVerticalNavMenu`\r\n    const shallShadowBottom = ref(false)\r\n\r\n    provide('isMouseHovered', isMouseHovered)\r\n\r\n    const perfectScrollbarSettings = {\r\n      maxScrollbarLength: 60,\r\n      wheelPropagation: false,\r\n    }\r\n\r\n    const collapseTogglerIconFeather = computed(() => (collapseTogglerIcon.value === 'unpinned' ? 'CircleIcon' : 'DiscIcon'))\r\n\r\n    // App Name\r\n    const { appName, appLogoImage } = $themeConfig.app\r\n\r\n    return {\r\n      navMenuItems,\r\n      perfectScrollbarSettings,\r\n      isVerticalMenuCollapsed,\r\n      collapseTogglerIcon,\r\n      toggleCollapsed,\r\n      isMouseHovered,\r\n      updateMouseHovered,\r\n      collapseTogglerIconFeather,\r\n\r\n      // Shadow Bottom\r\n      shallShadowBottom,\r\n\r\n      // Skin\r\n      skin,\r\n\r\n      // App Name\r\n      appName,\r\n      appLogoImage,\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"~@core/scss/base/core/menu/menu-types/vertical-menu.scss\";\r\n</style>\r\n"]}]}