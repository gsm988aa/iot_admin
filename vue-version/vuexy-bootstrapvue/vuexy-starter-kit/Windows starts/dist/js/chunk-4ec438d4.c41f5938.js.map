{"version":3,"sources":["webpack:///./src/views/ThreeD.vue?5353","webpack:///./node_modules/three/examples/jsm/loaders/STLLoader.js","webpack:///./node_modules/three/examples/jsm/controls/OrbitControls.js","webpack:///src/views/ThreeD.vue","webpack:///./src/views/ThreeD.vue?0dfc","webpack:///./src/views/ThreeD.vue","webpack:///./src/views/ThreeD.vue?c031","webpack:///./src/assets/images/gif/1.gif"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","staticStyle","attrs","on","BigData","_v","staticClass","staticRenderFns","manager","super","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","text","parse","e","console","error","itemError","data","isBinary","reader","DataView","face_size","n_faces","getUint32","expect","byteLength","solid","off","matchDataViewAt","query","offset","i","il","length","getUint8","parseBinary","faces","r","g","b","colors","defaultR","defaultG","defaultB","alpha","hasColors","index","Float32Array","dataOffset","faceLength","geometry","vertices","normals","color","face","start","normalX","getFloat32","normalY","normalZ","packedColor","getUint16","vertexstart","componentIdx","set","convertSRGBToLinear","setAttribute","parseASCII","patternSolid","patternFace","patternName","faceCounter","patternFloat","source","patternVertex","RegExp","patternNormal","groupNames","normal","result","groupCount","startVertex","endVertex","exec","name","push","vertexCountPerFace","normalCountPerFace","x","parseFloat","y","z","count","userData","addGroup","ensureString","buffer","TextDecoder","decode","ensureBinary","array_buffer","Uint8Array","charCodeAt","binData","_changeEvent","type","_startEvent","_endEvent","_ray","_plane","TILT_LIMIT","Math","cos","DEG2RAD","object","domElement","style","touchAction","enabled","target","cursor","minDistance","maxDistance","Infinity","minZoom","maxZoom","minTargetRadius","maxTargetRadius","minPolarAngle","maxPolarAngle","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","zoomToCursor","autoRotate","autoRotateSpeed","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ROTATE","MIDDLE","DOLLY","PAN","touches","ONE","TWO","DOLLY_PAN","target0","clone","position0","position","zoom0","zoom","_domElementKeyEvents","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","getDistance","distanceTo","listenToKeyEvents","addEventListener","onKeyDown","stopListenToKeyEvents","removeEventListener","saveState","copy","reset","updateProjectionMatrix","dispatchEvent","update","state","STATE","NONE","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","lastTargetPosition","twoPI","deltaTime","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","min","max","isFinite","makeSafe","addScaledVector","panOffset","add","clampLength","performCursorZoom","isOrthographicCamera","radius","clampDistance","scale","setFromSpherical","lookAt","multiplyScalar","zoomChanged","newRadius","isPerspectiveCamera","prevRadius","radiusDelta","dollyDirection","updateMatrixWorld","mouseBefore","mouse","unproject","mouseAfter","warn","transformDirection","matrix","origin","direction","abs","dot","setFromNormalAndCoplanarPoint","intersectPlane","distanceToSquared","EPS","quaternion","dispose","onContextMenu","onPointerDown","onPointerUp","onMouseWheel","onPointerMove","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","pointers","pointerPositions","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","targetDistance","tan","fov","clientHeight","right","left","clientWidth","top","bottom","dollyOut","dollyScale","dollyIn","updateMouseParameters","event","rect","getBoundingClientRect","clientX","clientY","w","width","h","height","normalize","dist","handleMouseDownRotate","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","needsUpdate","code","ctrlKey","metaKey","shiftKey","preventDefault","handleTouchStartRotate","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","handleTouchMoveRotate","getSecondPointerPosition","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","setPointerCapture","pointerId","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","removePointer","releasePointerCapture","mouseAction","button","trackPointer","DOLLY_ROTATE","splice","undefined","pointer","passive","components","BButton","scene","camera","renderer","mesh","beforeDestroy","mounted","backgroundTexture","window","light","light2","controls","tloader","side","shininess","specular","mesh2","rotationAngle","requestAnimationFrame","animate","boundingBox","sloader","methods","component","module","exports"],"mappings":"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","file":"js/chunk-4ec438d4.c41f5938.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"canvasContainer\",staticStyle:{\"scale\":\"0.78\",\"position\":\"absolute\",\"margin-top\":\"-60px\",\"margin-left\":\"-50px\",\"max-width\":\"100%\",\"height\":\"100vh\"}},[_c('b-button',{attrs:{\"variant\":\"success\"},on:{\"click\":_vm.BigData}},[_vm._v(\" 返回主页 \")])],1),_c('div',{staticClass:\"div\",attrs:{\"id\":\"container\"}},[_vm._v(\" 智能柜 \")]),_c('div',{staticClass:\"model\",attrs:{\"id\":\"container\"}},[_vm._v(\" 3D模型 \")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import {\n\tBufferAttribute,\n\tBufferGeometry,\n\tColor,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tLoader,\n\tVector3\n} from 'three';\n\n/**\n * Description: A THREE loader for STL ASCII files, as created by Solidworks and other CAD programs.\n *\n * Supports both binary and ASCII encoded files, with automatic detection of type.\n *\n * The loader returns a non-indexed buffer geometry.\n *\n * Limitations:\n *  Binary decoding supports \"Magics\" color format (http://en.wikipedia.org/wiki/STL_(file_format)#Color_in_binary_STL).\n *  There is perhaps some question as to how valid it is to always assume little-endian-ness.\n *  ASCII decoding assumes file is UTF-8.\n *\n * Usage:\n *  const loader = new STLLoader();\n *  loader.load( './models/stl/slotted_disk.stl', function ( geometry ) {\n *    scene.add( new THREE.Mesh( geometry ) );\n *  });\n *\n * For binary STLs geometry might contain colors for vertices. To use it:\n *  // use the same code to load STL as above\n *  if (geometry.hasColors) {\n *    material = new THREE.MeshPhongMaterial({ opacity: geometry.alpha, vertexColors: true });\n *  } else { .... }\n *  const mesh = new THREE.Mesh( geometry, material );\n *\n * For ASCII STLs containing multiple solids, each solid is assigned to a different group.\n * Groups can be used to assign a different color by defining an array of materials with the same length of\n * geometry.groups and passing it to the Mesh constructor:\n *\n * const mesh = new THREE.Mesh( geometry, material );\n *\n * For example:\n *\n *  const materials = [];\n *  const nGeometryGroups = geometry.groups.length;\n *\n *  const colorMap = ...; // Some logic to index colors.\n *\n *  for (let i = 0; i < nGeometryGroups; i++) {\n *\n *\t\tconst material = new THREE.MeshPhongMaterial({\n *\t\t\tcolor: colorMap[i],\n *\t\t\twireframe: false\n *\t\t});\n *\n *  }\n *\n *  materials.push(material);\n *  const mesh = new THREE.Mesh(geometry, materials);\n */\n\n\nclass STLLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( data ) {\n\n\t\tfunction isBinary( data ) {\n\n\t\t\tconst reader = new DataView( data );\n\t\t\tconst face_size = ( 32 / 8 * 3 ) + ( ( 32 / 8 * 3 ) * 3 ) + ( 16 / 8 );\n\t\t\tconst n_faces = reader.getUint32( 80, true );\n\t\t\tconst expect = 80 + ( 32 / 8 ) + ( n_faces * face_size );\n\n\t\t\tif ( expect === reader.byteLength ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// An ASCII STL data must begin with 'solid ' as the first six bytes.\n\t\t\t// However, ASCII STLs lacking the SPACE after the 'd' are known to be\n\t\t\t// plentiful.  So, check the first 5 bytes for 'solid'.\n\n\t\t\t// Several encodings, such as UTF-8, precede the text with up to 5 bytes:\n\t\t\t// https://en.wikipedia.org/wiki/Byte_order_mark#Byte_order_marks_by_encoding\n\t\t\t// Search for \"solid\" to start anywhere after those prefixes.\n\n\t\t\t// US-ASCII ordinal values for 's', 'o', 'l', 'i', 'd'\n\n\t\t\tconst solid = [ 115, 111, 108, 105, 100 ];\n\n\t\t\tfor ( let off = 0; off < 5; off ++ ) {\n\n\t\t\t\t// If \"solid\" text is matched to the current offset, declare it to be an ASCII STL.\n\n\t\t\t\tif ( matchDataViewAt( solid, reader, off ) ) return false;\n\n\t\t\t}\n\n\t\t\t// Couldn't find \"solid\" text at the beginning; it is binary STL.\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction matchDataViewAt( query, reader, offset ) {\n\n\t\t\t// Check if each byte in query matches the corresponding byte from the current offset\n\n\t\t\tfor ( let i = 0, il = query.length; i < il; i ++ ) {\n\n\t\t\t\tif ( query[ i ] !== reader.getUint8( offset + i ) ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction parseBinary( data ) {\n\n\t\t\tconst reader = new DataView( data );\n\t\t\tconst faces = reader.getUint32( 80, true );\n\n\t\t\tlet r, g, b, hasColors = false, colors;\n\t\t\tlet defaultR, defaultG, defaultB, alpha;\n\n\t\t\t// process STL header\n\t\t\t// check for default color in header (\"COLOR=rgba\" sequence).\n\n\t\t\tfor ( let index = 0; index < 80 - 10; index ++ ) {\n\n\t\t\t\tif ( ( reader.getUint32( index, false ) == 0x434F4C4F /*COLO*/ ) &&\n\t\t\t\t\t( reader.getUint8( index + 4 ) == 0x52 /*'R'*/ ) &&\n\t\t\t\t\t( reader.getUint8( index + 5 ) == 0x3D /*'='*/ ) ) {\n\n\t\t\t\t\thasColors = true;\n\t\t\t\t\tcolors = new Float32Array( faces * 3 * 3 );\n\n\t\t\t\t\tdefaultR = reader.getUint8( index + 6 ) / 255;\n\t\t\t\t\tdefaultG = reader.getUint8( index + 7 ) / 255;\n\t\t\t\t\tdefaultB = reader.getUint8( index + 8 ) / 255;\n\t\t\t\t\talpha = reader.getUint8( index + 9 ) / 255;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst dataOffset = 84;\n\t\t\tconst faceLength = 12 * 4 + 2;\n\n\t\t\tconst geometry = new BufferGeometry();\n\n\t\t\tconst vertices = new Float32Array( faces * 3 * 3 );\n\t\t\tconst normals = new Float32Array( faces * 3 * 3 );\n\n\t\t\tconst color = new Color();\n\n\t\t\tfor ( let face = 0; face < faces; face ++ ) {\n\n\t\t\t\tconst start = dataOffset + face * faceLength;\n\t\t\t\tconst normalX = reader.getFloat32( start, true );\n\t\t\t\tconst normalY = reader.getFloat32( start + 4, true );\n\t\t\t\tconst normalZ = reader.getFloat32( start + 8, true );\n\n\t\t\t\tif ( hasColors ) {\n\n\t\t\t\t\tconst packedColor = reader.getUint16( start + 48, true );\n\n\t\t\t\t\tif ( ( packedColor & 0x8000 ) === 0 ) {\n\n\t\t\t\t\t\t// facet has its own unique color\n\n\t\t\t\t\t\tr = ( packedColor & 0x1F ) / 31;\n\t\t\t\t\t\tg = ( ( packedColor >> 5 ) & 0x1F ) / 31;\n\t\t\t\t\t\tb = ( ( packedColor >> 10 ) & 0x1F ) / 31;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tr = defaultR;\n\t\t\t\t\t\tg = defaultG;\n\t\t\t\t\t\tb = defaultB;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 1; i <= 3; i ++ ) {\n\n\t\t\t\t\tconst vertexstart = start + i * 12;\n\t\t\t\t\tconst componentIdx = ( face * 3 * 3 ) + ( ( i - 1 ) * 3 );\n\n\t\t\t\t\tvertices[ componentIdx ] = reader.getFloat32( vertexstart, true );\n\t\t\t\t\tvertices[ componentIdx + 1 ] = reader.getFloat32( vertexstart + 4, true );\n\t\t\t\t\tvertices[ componentIdx + 2 ] = reader.getFloat32( vertexstart + 8, true );\n\n\t\t\t\t\tnormals[ componentIdx ] = normalX;\n\t\t\t\t\tnormals[ componentIdx + 1 ] = normalY;\n\t\t\t\t\tnormals[ componentIdx + 2 ] = normalZ;\n\n\t\t\t\t\tif ( hasColors ) {\n\n\t\t\t\t\t\tcolor.set( r, g, b ).convertSRGBToLinear();\n\n\t\t\t\t\t\tcolors[ componentIdx ] = color.r;\n\t\t\t\t\t\tcolors[ componentIdx + 1 ] = color.g;\n\t\t\t\t\t\tcolors[ componentIdx + 2 ] = color.b;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.setAttribute( 'normal', new BufferAttribute( normals, 3 ) );\n\n\t\t\tif ( hasColors ) {\n\n\t\t\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\t\t\t\tgeometry.hasColors = true;\n\t\t\t\tgeometry.alpha = alpha;\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction parseASCII( data ) {\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst patternSolid = /solid([\\s\\S]*?)endsolid/g;\n\t\t\tconst patternFace = /facet([\\s\\S]*?)endfacet/g;\n\t\t\tconst patternName = /solid\\s(.+)/;\n\t\t\tlet faceCounter = 0;\n\n\t\t\tconst patternFloat = /[\\s]+([+-]?(?:\\d*)(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)/.source;\n\t\t\tconst patternVertex = new RegExp( 'vertex' + patternFloat + patternFloat + patternFloat, 'g' );\n\t\t\tconst patternNormal = new RegExp( 'normal' + patternFloat + patternFloat + patternFloat, 'g' );\n\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst groupNames = [];\n\n\t\t\tconst normal = new Vector3();\n\n\t\t\tlet result;\n\n\t\t\tlet groupCount = 0;\n\t\t\tlet startVertex = 0;\n\t\t\tlet endVertex = 0;\n\n\t\t\twhile ( ( result = patternSolid.exec( data ) ) !== null ) {\n\n\t\t\t\tstartVertex = endVertex;\n\n\t\t\t\tconst solid = result[ 0 ];\n\n\t\t\t\tconst name = ( result = patternName.exec( solid ) ) !== null ? result[ 1 ] : '';\n\t\t\t\tgroupNames.push( name );\n\n\t\t\t\twhile ( ( result = patternFace.exec( solid ) ) !== null ) {\n\n\t\t\t\t\tlet vertexCountPerFace = 0;\n\t\t\t\t\tlet normalCountPerFace = 0;\n\n\t\t\t\t\tconst text = result[ 0 ];\n\n\t\t\t\t\twhile ( ( result = patternNormal.exec( text ) ) !== null ) {\n\n\t\t\t\t\t\tnormal.x = parseFloat( result[ 1 ] );\n\t\t\t\t\t\tnormal.y = parseFloat( result[ 2 ] );\n\t\t\t\t\t\tnormal.z = parseFloat( result[ 3 ] );\n\t\t\t\t\t\tnormalCountPerFace ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\twhile ( ( result = patternVertex.exec( text ) ) !== null ) {\n\n\t\t\t\t\t\tvertices.push( parseFloat( result[ 1 ] ), parseFloat( result[ 2 ] ), parseFloat( result[ 3 ] ) );\n\t\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\t\t\t\t\t\tvertexCountPerFace ++;\n\t\t\t\t\t\tendVertex ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// every face have to own ONE valid normal\n\n\t\t\t\t\tif ( normalCountPerFace !== 1 ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.STLLoader: Something isn\\'t right with the normal of face number ' + faceCounter );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// each face have to own THREE valid vertices\n\n\t\t\t\t\tif ( vertexCountPerFace !== 3 ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.STLLoader: Something isn\\'t right with the vertices of face number ' + faceCounter );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCounter ++;\n\n\t\t\t\t}\n\n\t\t\t\tconst start = startVertex;\n\t\t\t\tconst count = endVertex - startVertex;\n\n\t\t\t\tgeometry.userData.groupNames = groupNames;\n\n\t\t\t\tgeometry.addGroup( start, count, groupCount );\n\t\t\t\tgroupCount ++;\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t\tfunction ensureString( buffer ) {\n\n\t\t\tif ( typeof buffer !== 'string' ) {\n\n\t\t\t\treturn new TextDecoder().decode( buffer );\n\n\t\t\t}\n\n\t\t\treturn buffer;\n\n\t\t}\n\n\t\tfunction ensureBinary( buffer ) {\n\n\t\t\tif ( typeof buffer === 'string' ) {\n\n\t\t\t\tconst array_buffer = new Uint8Array( buffer.length );\n\t\t\t\tfor ( let i = 0; i < buffer.length; i ++ ) {\n\n\t\t\t\t\tarray_buffer[ i ] = buffer.charCodeAt( i ) & 0xff; // implicitly assumes little-endian\n\n\t\t\t\t}\n\n\t\t\t\treturn array_buffer.buffer || array_buffer;\n\n\t\t\t} else {\n\n\t\t\t\treturn buffer;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// start\n\n\t\tconst binData = ensureBinary( data );\n\n\t\treturn isBinary( binData ) ? parseBinary( binData ) : parseASCII( ensureString( data ) );\n\n\t}\n\n}\n\nexport { STLLoader };\n","import {\n\tEventDispatcher,\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\n\n// OrbitControls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nclass OrbitControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// Set to false to disable this control\n\t\tthis.enabled = true;\n\n\t\t// \"target\" sets the location of focus, where the object orbits around\n\t\tthis.target = new Vector3();\n\n\t\t// Sets the 3D cursor (similar to Blender), from which the maxTargetRadius takes effect\n\t\tthis.cursor = new Vector3();\n\n\t\t// How far you can dolly in and out ( PerspectiveCamera only )\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\t// How far you can zoom in and out ( OrthographicCamera only )\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\t// Limit camera target within a spherical area around the cursor\n\t\tthis.minTargetRadius = 0;\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t// How far you can orbit vertically, upper and lower limits.\n\t\t// Range is 0 to Math.PI radians.\n\t\tthis.minPolarAngle = 0; // radians\n\t\tthis.maxPolarAngle = Math.PI; // radians\n\n\t\t// How far you can orbit horizontally, upper and lower limits.\n\t\t// If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\t\tthis.minAzimuthAngle = - Infinity; // radians\n\t\tthis.maxAzimuthAngle = Infinity; // radians\n\n\t\t// Set to true to enable damping (inertia)\n\t\t// If damping is enabled, you must call controls.update() in your animation loop\n\t\tthis.enableDamping = false;\n\t\tthis.dampingFactor = 0.05;\n\n\t\t// This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n\t\t// Set to false to disable zooming\n\t\tthis.enableZoom = true;\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t// Set to false to disable rotating\n\t\tthis.enableRotate = true;\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t// Set to false to disable panning\n\t\tthis.enablePan = true;\n\t\tthis.panSpeed = 1.0;\n\t\tthis.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\t\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\t\tthis.zoomToCursor = false;\n\n\t\t// Set to true to automatically rotate around the target\n\t\t// If auto-rotate is enabled, you must call controls.update() in your animation loop\n\t\tthis.autoRotate = false;\n\t\tthis.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n\n\t\t// The four arrow keys\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t// Mouse buttons\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// Touch fingers\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t// for reset\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t//\n\t\t// public methods\n\t\t//\n\n\t\tthis.getPolarAngle = function () {\n\n\t\t\treturn spherical.phi;\n\n\t\t};\n\n\t\tthis.getAzimuthalAngle = function () {\n\n\t\t\treturn spherical.theta;\n\n\t\t};\n\n\t\tthis.getDistance = function () {\n\n\t\t\treturn this.object.position.distanceTo( this.target );\n\n\t\t};\n\n\t\tthis.listenToKeyEvents = function ( domElement ) {\n\n\t\t\tdomElement.addEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = domElement;\n\n\t\t};\n\n\t\tthis.stopListenToKeyEvents = function () {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t};\n\n\t\tthis.saveState = function () {\n\n\t\t\tscope.target0.copy( scope.target );\n\t\t\tscope.position0.copy( scope.object.position );\n\t\t\tscope.zoom0 = scope.object.zoom;\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tscope.update();\n\n\t\t\tstate = STATE.NONE;\n\n\t\t};\n\n\t\t// this method is exposed, but perhaps it would be better if we can make it private...\n\t\tthis.update = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\t// so camera.up is the orbit axis\n\t\t\tconst quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\t\tconst quatInverse = quat.clone().invert();\n\n\t\t\tconst lastPosition = new Vector3();\n\t\t\tconst lastQuaternion = new Quaternion();\n\t\t\tconst lastTargetPosition = new Vector3();\n\n\t\t\tconst twoPI = 2 * Math.PI;\n\n\t\t\treturn function update( deltaTime = null ) {\n\n\t\t\t\tconst position = scope.object.position;\n\n\t\t\t\toffset.copy( position ).sub( scope.target );\n\n\t\t\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t\t\toffset.applyQuaternion( quat );\n\n\t\t\t\t// angle from z-axis around y-axis\n\t\t\t\tspherical.setFromVector3( offset );\n\n\t\t\t\tif ( scope.autoRotate && state === STATE.NONE ) {\n\n\t\t\t\t\trotateLeft( getAutoRotationAngle( deltaTime ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.enableDamping ) {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta * scope.dampingFactor;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi * scope.dampingFactor;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.theta += sphericalDelta.theta;\n\t\t\t\t\tspherical.phi += sphericalDelta.phi;\n\n\t\t\t\t}\n\n\t\t\t\t// restrict theta to be between desired limits\n\n\t\t\t\tlet min = scope.minAzimuthAngle;\n\t\t\t\tlet max = scope.maxAzimuthAngle;\n\n\t\t\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\t\t\tif ( min < - Math.PI ) min += twoPI; else if ( min > Math.PI ) min -= twoPI;\n\n\t\t\t\t\tif ( max < - Math.PI ) max += twoPI; else if ( max > Math.PI ) max -= twoPI;\n\n\t\t\t\t\tif ( min <= max ) {\n\n\t\t\t\t\t\tspherical.theta = Math.max( min, Math.min( max, spherical.theta ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tspherical.theta = ( spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\t\t\tMath.max( min, spherical.theta ) :\n\t\t\t\t\t\t\tMath.min( max, spherical.theta );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// restrict phi to be between desired limits\n\t\t\t\tspherical.phi = Math.max( scope.minPolarAngle, Math.min( scope.maxPolarAngle, spherical.phi ) );\n\n\t\t\t\tspherical.makeSafe();\n\n\n\t\t\t\t// move target to panned location\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tscope.target.addScaledVector( panOffset, scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.target.add( panOffset );\n\n\t\t\t\t}\n\n\t\t\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\t\t\tscope.target.sub( scope.cursor );\n\t\t\t\tscope.target.clampLength( scope.minTargetRadius, scope.maxTargetRadius );\n\t\t\t\tscope.target.add( scope.cursor );\n\n\t\t\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t\t\t// we adjust zoom later in these cases\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom || scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tspherical.radius = clampDistance( spherical.radius * scale );\n\n\t\t\t\t}\n\n\t\t\t\toffset.setFromSpherical( spherical );\n\n\t\t\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t\t\toffset.applyQuaternion( quatInverse );\n\n\t\t\t\tposition.copy( scope.target ).add( offset );\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( scope.enableDamping === true ) {\n\n\t\t\t\t\tsphericalDelta.theta *= ( 1 - scope.dampingFactor );\n\t\t\t\t\tsphericalDelta.phi *= ( 1 - scope.dampingFactor );\n\n\t\t\t\t\tpanOffset.multiplyScalar( 1 - scope.dampingFactor );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsphericalDelta.set( 0, 0, 0 );\n\n\t\t\t\t\tpanOffset.set( 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t// adjust camera position\n\t\t\t\tlet zoomChanged = false;\n\t\t\t\tif ( scope.zoomToCursor && performCursorZoom ) {\n\n\t\t\t\t\tlet newRadius = null;\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t\t\t// this method avoids floating point error\n\t\t\t\t\t\tconst prevRadius = offset.length();\n\t\t\t\t\t\tnewRadius = clampDistance( prevRadius * scale );\n\n\t\t\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\t\t\tscope.object.position.addScaledVector( dollyDirection, radiusDelta );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\t\t\tconst mouseBefore = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseBefore.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t\t\tconst mouseAfter = new Vector3( mouse.x, mouse.y, 0 );\n\t\t\t\t\t\tmouseAfter.unproject( scope.object );\n\n\t\t\t\t\t\tscope.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\t\t\tscope.object.updateMatrixWorld();\n\n\t\t\t\t\t\tnewRadius = offset.length();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\t\t\tscope.zoomToCursor = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// handle the placement of the target\n\t\t\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\t\t\tscope.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t\t\t.transformDirection( scope.object.matrix )\n\t\t\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t\t\t.add( scope.object.position );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t\t\t_ray.origin.copy( scope.object.position );\n\t\t\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( scope.object.matrix );\n\n\t\t\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t\t\t// extremely large values\n\t\t\t\t\t\t\tif ( Math.abs( scope.object.up.dot( _ray.direction ) ) < TILT_LIMIT ) {\n\n\t\t\t\t\t\t\t\tobject.lookAt( scope.target );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( scope.object.up, scope.target );\n\t\t\t\t\t\t\t\t_ray.intersectPlane( _plane, scope.target );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tscope.object.zoom = Math.max( scope.minZoom, Math.min( scope.maxZoom, scope.object.zoom / scale ) );\n\t\t\t\t\tscope.object.updateProjectionMatrix();\n\t\t\t\t\tzoomChanged = true;\n\n\t\t\t\t}\n\n\t\t\t\tscale = 1;\n\t\t\t\tperformCursorZoom = false;\n\n\t\t\t\t// update condition is:\n\t\t\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\t\t\tif ( zoomChanged ||\n\t\t\t\t\tlastPosition.distanceToSquared( scope.object.position ) > EPS ||\n\t\t\t\t\t8 * ( 1 - lastQuaternion.dot( scope.object.quaternion ) ) > EPS ||\n\t\t\t\t\tlastTargetPosition.distanceToSquared( scope.target ) > 0 ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastQuaternion.copy( scope.object.quaternion );\n\t\t\t\t\tlastTargetPosition.copy( scope.target );\n\n\t\t\t\t\tzoomChanged = false;\n\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\n\t\t\t};\n\n\t\t}();\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', onContextMenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerUp );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\n\t\t\tif ( scope._domElementKeyEvents !== null ) {\n\n\t\t\t\tscope._domElementKeyEvents.removeEventListener( 'keydown', onKeyDown );\n\t\t\t\tscope._domElementKeyEvents = null;\n\n\t\t\t}\n\n\t\t\t//scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n\t\t};\n\n\t\t//\n\t\t// internals\n\t\t//\n\n\t\tconst scope = this;\n\n\t\tconst STATE = {\n\t\t\tNONE: - 1,\n\t\t\tROTATE: 0,\n\t\t\tDOLLY: 1,\n\t\t\tPAN: 2,\n\t\t\tTOUCH_ROTATE: 3,\n\t\t\tTOUCH_PAN: 4,\n\t\t\tTOUCH_DOLLY_PAN: 5,\n\t\t\tTOUCH_DOLLY_ROTATE: 6\n\t\t};\n\n\t\tlet state = STATE.NONE;\n\n\t\tconst EPS = 0.000001;\n\n\t\t// current position in spherical coordinates\n\t\tconst spherical = new Spherical();\n\t\tconst sphericalDelta = new Spherical();\n\n\t\tlet scale = 1;\n\t\tconst panOffset = new Vector3();\n\n\t\tconst rotateStart = new Vector2();\n\t\tconst rotateEnd = new Vector2();\n\t\tconst rotateDelta = new Vector2();\n\n\t\tconst panStart = new Vector2();\n\t\tconst panEnd = new Vector2();\n\t\tconst panDelta = new Vector2();\n\n\t\tconst dollyStart = new Vector2();\n\t\tconst dollyEnd = new Vector2();\n\t\tconst dollyDelta = new Vector2();\n\n\t\tconst dollyDirection = new Vector3();\n\t\tconst mouse = new Vector2();\n\t\tlet performCursorZoom = false;\n\n\t\tconst pointers = [];\n\t\tconst pointerPositions = {};\n\n\t\tfunction getAutoRotationAngle( deltaTime ) {\n\n\t\t\tif ( deltaTime !== null ) {\n\n\t\t\t\treturn ( 2 * Math.PI / 60 * scope.autoRotateSpeed ) * deltaTime;\n\n\t\t\t} else {\n\n\t\t\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getZoomScale() {\n\n\t\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t\t}\n\n\t\tfunction rotateLeft( angle ) {\n\n\t\t\tsphericalDelta.theta -= angle;\n\n\t\t}\n\n\t\tfunction rotateUp( angle ) {\n\n\t\t\tsphericalDelta.phi -= angle;\n\n\t\t}\n\n\t\tconst panLeft = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panLeft( distance, objectMatrix ) {\n\n\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t\t\tv.multiplyScalar( - distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\tconst panUp = function () {\n\n\t\t\tconst v = new Vector3();\n\n\t\t\treturn function panUp( distance, objectMatrix ) {\n\n\t\t\t\tif ( scope.screenSpacePanning === true ) {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t\t\tv.crossVectors( scope.object.up, v );\n\n\t\t\t\t}\n\n\t\t\t\tv.multiplyScalar( distance );\n\n\t\t\t\tpanOffset.add( v );\n\n\t\t\t};\n\n\t\t}();\n\n\t\t// deltaX and deltaY are in pixels; right and down are positive\n\t\tconst pan = function () {\n\n\t\t\tconst offset = new Vector3();\n\n\t\t\treturn function pan( deltaX, deltaY ) {\n\n\t\t\t\tconst element = scope.domElement;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t// perspective\n\t\t\t\t\tconst position = scope.object.position;\n\t\t\t\t\toffset.copy( position ).sub( scope.target );\n\t\t\t\t\tlet targetDistance = offset.length();\n\n\t\t\t\t\t// half of the fov is center to top of screen\n\t\t\t\t\ttargetDistance *= Math.tan( ( scope.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\t\t\tpanLeft( 2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix );\n\t\t\t\t\tpanUp( 2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t// orthographic\n\t\t\t\t\tpanLeft( deltaX * ( scope.object.right - scope.object.left ) / scope.object.zoom / element.clientWidth, scope.object.matrix );\n\t\t\t\t\tpanUp( deltaY * ( scope.object.top - scope.object.bottom ) / scope.object.zoom / element.clientHeight, scope.object.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// camera neither orthographic nor perspective\n\t\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\t\t\tscope.enablePan = false;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}();\n\n\t\tfunction dollyOut( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale /= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction dollyIn( dollyScale ) {\n\n\t\t\tif ( scope.object.isPerspectiveCamera || scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscale *= dollyScale;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\t\tscope.enableZoom = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateMouseParameters( event ) {\n\n\t\t\tif ( ! scope.zoomToCursor ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tperformCursorZoom = true;\n\n\t\t\tconst rect = scope.domElement.getBoundingClientRect();\n\t\t\tconst x = event.clientX - rect.left;\n\t\t\tconst y = event.clientY - rect.top;\n\t\t\tconst w = rect.width;\n\t\t\tconst h = rect.height;\n\n\t\t\tmouse.x = ( x / w ) * 2 - 1;\n\t\t\tmouse.y = - ( y / h ) * 2 + 1;\n\n\t\t\tdollyDirection.set( mouse.x, mouse.y, 1 ).unproject( scope.object ).sub( scope.object.position ).normalize();\n\n\t\t}\n\n\t\tfunction clampDistance( dist ) {\n\n\t\t\treturn Math.max( scope.minDistance, Math.min( scope.maxDistance, dist ) );\n\n\t\t}\n\n\t\t//\n\t\t// event callbacks - update the object state\n\t\t//\n\n\t\tfunction handleMouseDownRotate( event ) {\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownDolly( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseDownPan( event ) {\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\tfunction handleMouseMoveRotate( event ) {\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMoveDolly( event ) {\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t} else if ( dollyDelta.y < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseMovePan( event ) {\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleMouseWheel( event ) {\n\n\t\t\tupdateMouseParameters( event );\n\n\t\t\tif ( event.deltaY < 0 ) {\n\n\t\t\t\tdollyIn( getZoomScale() );\n\n\t\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\t\tdollyOut( getZoomScale() );\n\n\t\t\t}\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t\tfunction handleKeyDown( event ) {\n\n\t\t\tlet needsUpdate = false;\n\n\t\t\tswitch ( event.code ) {\n\n\t\t\t\tcase scope.keys.UP:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.BOTTOM:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateUp( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( 0, - scope.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.LEFT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase scope.keys.RIGHT:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\trotateLeft( - 2 * Math.PI * scope.rotateSpeed / scope.domElement.clientHeight );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpan( - scope.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tscope.update();\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction handleTouchStartRotate() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\trotateStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\trotateStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartPan() {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanStart.set( pointers[ 0 ].pageX, pointers[ 0 ].pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst x = 0.5 * ( pointers[ 0 ].pageX + pointers[ 1 ].pageX );\n\t\t\t\tconst y = 0.5 * ( pointers[ 0 ].pageY + pointers[ 1 ].pageY );\n\n\t\t\t\tpanStart.set( x, y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction handleTouchStartDolly() {\n\n\t\t\tconst dx = pointers[ 0 ].pageX - pointers[ 1 ].pageX;\n\t\t\tconst dy = pointers[ 0 ].pageY - pointers[ 1 ].pageY;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyStart.set( 0, distance );\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyPan() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enablePan ) handleTouchStartPan();\n\n\t\t}\n\n\t\tfunction handleTouchStartDollyRotate() {\n\n\t\t\tif ( scope.enableZoom ) handleTouchStartDolly();\n\n\t\t\tif ( scope.enableRotate ) handleTouchStartRotate();\n\n\t\t}\n\n\t\tfunction handleTouchMoveRotate( event ) {\n\n\t\t\tif ( pointers.length == 1 ) {\n\n\t\t\t\trotateEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\trotateEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart ).multiplyScalar( scope.rotateSpeed );\n\n\t\t\tconst element = scope.domElement;\n\n\t\t\trotateLeft( 2 * Math.PI * rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\t\trotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMovePan( event ) {\n\n\t\t\tif ( pointers.length === 1 ) {\n\n\t\t\t\tpanEnd.set( event.pageX, event.pageY );\n\n\t\t\t} else {\n\n\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\t\tpanEnd.set( x, y );\n\n\t\t\t}\n\n\t\t\tpanDelta.subVectors( panEnd, panStart ).multiplyScalar( scope.panSpeed );\n\n\t\t\tpan( panDelta.x, panDelta.y );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDolly( event ) {\n\n\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\tconst dx = event.pageX - position.x;\n\t\t\tconst dy = event.pageY - position.y;\n\n\t\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\tdollyEnd.set( 0, distance );\n\n\t\t\tdollyDelta.set( 0, Math.pow( dollyEnd.y / dollyStart.y, scope.zoomSpeed ) );\n\n\t\t\tdollyOut( dollyDelta.y );\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyPan( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enablePan ) handleTouchMovePan( event );\n\n\t\t}\n\n\t\tfunction handleTouchMoveDollyRotate( event ) {\n\n\t\t\tif ( scope.enableZoom ) handleTouchMoveDolly( event );\n\n\t\t\tif ( scope.enableRotate ) handleTouchMoveRotate( event );\n\n\t\t}\n\n\t\t//\n\t\t// event handlers - FSM: listen for events and reset state\n\t\t//\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tlet mouseAction;\n\n\t\t\tswitch ( event.button ) {\n\n\t\t\t\tcase 0:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.LEFT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.MIDDLE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tmouseAction = scope.mouseButtons.RIGHT;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tmouseAction = - 1;\n\n\t\t\t}\n\n\t\t\tswitch ( mouseAction ) {\n\n\t\t\t\tcase MOUSE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseDownDolly( event );\n\n\t\t\t\t\tstate = STATE.DOLLY;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.ROTATE:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MOUSE.PAN:\n\n\t\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\thandleMouseDownRotate( event );\n\n\t\t\t\t\t\tstate = STATE.ROTATE;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\thandleMouseDownPan( event );\n\n\t\t\t\t\t\tstate = STATE.PAN;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleMouseMoveRotate( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.DOLLY:\n\n\t\t\t\t\tif ( scope.enableZoom === false ) return;\n\n\t\t\t\t\thandleMouseMoveDolly( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleMouseMovePan( event );\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\thandleMouseWheel( event );\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onKeyDown( event ) {\n\n\t\t\tif ( scope.enabled === false || scope.enablePan === false ) return;\n\n\t\t\thandleKeyDown( event );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( pointers.length ) {\n\n\t\t\t\tcase 1:\n\n\t\t\t\t\tswitch ( scope.touches.ONE ) {\n\n\t\t\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\n\t\t\t\t\tswitch ( scope.touches.TWO ) {\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyPan();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\t\t\thandleTouchStartDollyRotate();\n\n\t\t\t\t\t\t\tstate = STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t\tif ( state !== STATE.NONE ) {\n\n\t\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( state ) {\n\n\t\t\t\tcase STATE.TOUCH_ROTATE:\n\n\t\t\t\t\tif ( scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_PAN:\n\n\t\t\t\t\tif ( scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMovePan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_PAN:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enablePan === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyPan( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\t\t\tif ( scope.enableZoom === false && scope.enableRotate === false ) return;\n\n\t\t\t\t\thandleTouchMoveDollyRotate( event );\n\n\t\t\t\t\tscope.update();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tstate = STATE.NONE;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onContextMenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\tpointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < pointers.length; i ++ ) {\n\n\t\t\t\tif ( pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\tpointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\tpointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === pointers[ 0 ].pointerId ) ? pointers[ 1 ] : pointers[ 0 ];\n\n\t\t\treturn pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\t//\n\n\t\tscope.domElement.addEventListener( 'contextmenu', onContextMenu );\n\n\t\tscope.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tscope.domElement.addEventListener( 'pointercancel', onPointerUp );\n\t\tscope.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\t\t// force an update at start\n\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { OrbitControls };\n","<template>\n  <div>\n    <div\n      ref=\"canvasContainer\"\n      style=\"scale: 0.78;position: absolute;margin-top: -60px;margin-left: -50px;max-width: 100%;height: 100vh;\"\n    >\n      <b-button\n        variant=\"success\"\n        @click=\"BigData\"\n      >\n        返回主页\n      </b-button>\n\n    </div>\n    <div\n      id=\"container\"\n      class=\"div\"\n    >\n      智能柜\n    </div>\n    <div\n      id=\"container\"\n      class=\"model\"\n    >\n      3D模型\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport * as THREE from 'three'\n\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader'\n// import { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls' // 旋转控制器\nimport {\n  BButton,\n} from 'bootstrap-vue'\nimport background from '@/assets/images/gif/1.gif' // 背景图片\n\nexport default {\n  components: {\n    BButton,\n  },\n  data() {\n    return {\n      scene: null,\n      camera: null,\n      renderer: null,\n      mesh: null,\n    }\n  },\n  beforeDestroy() {\n    // 防止内存泄露\n    if (!this.myChart) {\n      return\n    }\n    this.myChart.dispose()\n    this.myChart = null\n  },\n  mounted() {\n    // 1、创建场景\n    this.scene = new THREE.Scene()\n    // this.scene.background = new THREE.Color(0x38628a) // 设置背景颜色，这里是白色\n\n    const loader = new THREE.TextureLoader()\n    const backgroundTexture = loader.load(background)\n\n    // 在加载完成后，设置背景\n    backgroundTexture.minFilter = THREE.LinearFilter\n    this.scene.background = backgroundTexture\n\n    // 2、创建相机\n    this.camera = new THREE.PerspectiveCamera(\n      30, window.innerWidth / window.innerHeight,\n      0.1,\n      750,\n    )\n    this.camera.position.z = 420 // 设置摄像机的 z 坐标\n    this.camera.position.x = 200 // 设置摄像机的 x 坐标\n    this.camera.position.y = 100 // 设置摄像机的 y 坐标\n\n    // 3、创建渲染器\n    this.renderer = new THREE.WebGLRenderer()\n    this.renderer.setSize(window.innerWidth, window.innerHeight)\n    this.$refs.canvasContainer.appendChild(this.renderer.domElement)\n    this.renderer.antialias = true\n\n    // 在窗口大小变化时重新调整渲染器大小\n    window.addEventListener('resize', () => {\n      const newWidth = window.innerWidth\n      const newHeight = window.innerHeight\n      this.camera.aspect = newWidth / newHeight\n      this.camera.updateProjectionMatrix()\n      this.renderer.setSize(window.innerWidth, window.innerHeight)\n    })\n\n    // 添加环境光\n    const ambientLight = new THREE.AmbientLight(0xffffff, 1) // 设置环境光颜色\n    this.scene.add(ambientLight)\n    // 添加光源\n    const light = new THREE.DirectionalLight(0xffffff, 4.2)\n    light.position.set(2, 2, 2).normalize()\n    this.scene.add(light)\n    // 添加反面光源\n    const light2 = new THREE.DirectionalLight(0xffffff, 2)\n    light2.position.set(-2, -2, -2).normalize() // 使用反方向的光源\n    this.scene.add(light2)\n\n    if (this.renderer.domElement) {\n      // 创建OrbitControls并配置\n      const controls = new OrbitControls(this.camera, this.renderer.domElement)\n\n      // 设置控制器的属性\n      controls.enableDamping = true // 启用阻尼效果，使相机运动平滑\n      controls.dampingFactor = 0.1 // 阻尼效果的强度\n      controls.rotateSpeed = 0.5 // 旋转速度\n\n      const tloader = new STLLoader()\n      // 加载第一个STL文件，以及其他STL文件，重复上述过程\n      tloader.load('model/tong.stl', geometry2 => {\n        const material2 = new THREE.MeshPhongMaterial({\n          color: 0xcecece,\n          side: THREE.DoubleSide,\n          shininess: 100,\n          specular: 0x111111,\n        })\n\n        const mesh2 = new THREE.Mesh(geometry2, material2)\n        mesh2.scale.set(0.15, 0.15, 0.15)\n        mesh2.position.set(380, 20, 0) // 设置第二个STL文件的位置\n\n        this.scene.add(mesh2)\n\n        let rotationAngle = 0 // 在初始化中定义一个变量用于存储旋转角度\n        const animate = () => {\n          rotationAngle += 0.01 // 调整旋转速度\n          mesh2.rotation.set(0, rotationAngle, 0)// 在动画循环函数中更新旋转角度并应用到物体\n          requestAnimationFrame(animate)\n          controls.update() // 更新控制器\n          this.renderer.render(this.scene, this.camera)\n        }\n\n        animate() // 启动动画循环\n\n        const boundingBox = new THREE.Box3().setFromObject(mesh2)\n        const center = new THREE.Vector3()\n        boundingBox.getCenter(center)\n        controls.target.copy(center) // 将控件的目标设置为对象的中心\n      })\n\n      // 加载第二个STL文件\n      // const loader = new FBXLoader()\n      const sloader = new STLLoader()\n      // 加载STL文件\n      sloader.load('model/2.stl', geometry => {\n        // MeshLambertMaterial材质 光滑\n        const material = new THREE.MeshPhongMaterial({ // Phong material 有纹理的材质\n          color: 0xcecece, // 设置颜色\n          side: THREE.DoubleSide,\n          shininess: 100, // 亮度\n          specular: 0x111111, // 镜面颜色\n        })\n\n        const mesh = new THREE.Mesh(geometry, material)\n        mesh.scale.set(0.05, 0.05, 0.05) // 缩放物体大小\n        mesh.position.set(200, 20, 0) // 设置第二个STL文件的位置\n        let rotationAngle = 0 // 在初始化中定义一个变量用于存储旋转角度\n        const animate = () => {\n          rotationAngle += 0.005 // 调整旋转速度\n          mesh.rotation.set(0, rotationAngle, 0)// 在动画循环函数中更新旋转角度并应用到物体\n          requestAnimationFrame(animate)\n          controls.update() // 更新控制器\n          this.renderer.render(this.scene, this.camera)\n        }\n\n        animate() // 启动动画循环\n\n        const boundingBox = new THREE.Box3().setFromObject(mesh)\n        const center = new THREE.Vector3()\n        boundingBox.getCenter(center)\n        controls.target.copy(center) // 将控件的目标设置为对象的中心\n\n        this.scene.add(mesh)\n      })\n\n      window.addEventListener('resize', () => {\n        controls.update()\n      })\n\n      // 添加渲染循环\n    }\n  },\n  methods: {\n    BigData() {\n      // 使用 Vue Router 导航到 Home 界面\n      window.location.href = 'BigData.vue'\n    },\n  },\n}\n\n</script>\n<style lang=\"scss\">\n#canvas {\n  text-align: center;\n  height: 100vh;\n  width: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n}\n\n.div {\n  font-size: 6vw;\n  line-height: 100vh;\n  filter: drop-shadow(0 0 5px #ecc700);\n  animation: spin 5s linear infinite;\n  z-index: 80;\n  position: fixed;\n  display: flex;\n  margin-left: 580px;\n  margin-top: -280px;\n  color: #ffffff;\n  font-family: 微软雅黑,serif;\n}\n.model {\n  font-size: 6vw;\n  line-height: 100vh;\n  filter: drop-shadow(0 0 5px #ecc700);\n  animation: spin 5s linear infinite;\n  z-index: 80;\n  position: absolute;\n  margin-left: 540px;\n  margin-top: -200px;\n  color: #ffffff;\n  font-family: 微软雅黑,serif;\n}\n\n@keyframes spin {\n  100% {\n    transform: rotateY(360deg);\n  }\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeD.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeD.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ThreeD.vue?vue&type=template&id=71e9ef72&\"\nimport script from \"./ThreeD.vue?vue&type=script&lang=js&\"\nexport * from \"./ThreeD.vue?vue&type=script&lang=js&\"\nimport style0 from \"./ThreeD.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ThreeD.vue?vue&type=style&index=0&lang=scss&\"","module.exports = __webpack_public_path__ + \"img/1.be4950a1.gif\";"],"sourceRoot":""}